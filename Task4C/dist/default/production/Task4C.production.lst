

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Nov 04 11:26:27 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.44
    19                           ; Generated 14/09/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130                           
   131                           	psect	strings
   132  0003                     __pstrings:	
   133  0003                     stringtab:	
   134  0003                     __stringtab:	
   135  0003                     stringcode:	
   136                           ;	String table - string pointers are 1 byte each
   137                           
   138  0003                     stringdir:	
   139  0003  3000               	movlw	high stringdir
   140  0004  008A               	movwf	10
   141  0005  0804               	movf	4,w
   142  0006  0A84               	incf	4,f
   143  0007  0782               	addwf	2,f
   144  0008                     __stringbase:	
   145  0008  3400               	retlw	0
   146  0009                     __end_of__stringtab:	
   147  0009                     _Student_Number:	
   148  0009  3407               	retlw	7
   149  000A  3405               	retlw	5
   150  000B  3409               	retlw	9
   151  000C  3405               	retlw	5
   152  000D                     __end_of_Student_Number:	
   153  0009                     _PORTE	set	9
   154  0007                     _PORTC	set	7
   155  0005                     _PORTA	set	5
   156  0008                     _PORTD	set	8
   157  0006                     _PORTB	set	6
   158  001E                     _ADRESH	set	30
   159  001F                     _ADCON0	set	31
   160  009F                     _ADCON1	set	159
   161  0081                     _OPTION_REG	set	129
   162  0089                     _TRISE	set	137
   163  0088                     _TRISD	set	136
   164  0087                     _TRISC	set	135
   165  0086                     _TRISB	set	134
   166  0085                     _TRISA	set	133
   167  0188                     _ANSEL	set	392
   168  0189                     _ANSELH	set	393
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  07FC                     start_initialization:	
   174  07FC                     __initialization:	
   175  07FC                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178  07FC                     __end_of__initialization:	
   179  07FC  0183               	clrf	3
   180  07FD  120A  118A  2F25   	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	cstackCOMMON
   183  0070                     __pcstackCOMMON:	
   184  0070                     ?_Dispaly:	
   185  0070                     ?_Morse_code:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0070                     ?_Morse_dash:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ??_Morse_dash:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ?_Morse_dot:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ??_Morse_dot:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_ReadADC:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ??_ReadADC:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_ReadSw:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ??_ReadSw:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_Select4:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 2 bytes @ 0x0
   220  0070                     	ds	2
   221  0072                     ReadSw@tmp:	
   222                           
   223                           ; 1 bytes @ 0x2
   224  0072                     	ds	1
   225  0073                     ??_Dispaly:	
   226  0073                     ??_Morse_code:	
   227                           ; 1 bytes @ 0x3
   228                           
   229  0073                     ??_Select4:	
   230                           ; 1 bytes @ 0x3
   231                           
   232                           
   233                           ; 1 bytes @ 0x3
   234  0073                     	ds	3
   235  0076                     Select4@tmp:	
   236  0076                     Dispaly@Postion:	
   237                           ; 1 bytes @ 0x6
   238                           
   239                           
   240                           ; 1 bytes @ 0x6
   241  0076                     	ds	1
   242  0077                     Select4@oldLEDs:	
   243                           
   244                           ; 1 bytes @ 0x7
   245  0077                     	ds	1
   246  0078                     Select4@result:	
   247                           
   248                           ; 1 bytes @ 0x8
   249  0078                     	ds	1
   250  0079                     ??_main:	
   251                           
   252                           ; 1 bytes @ 0x9
   253  0079                     	ds	3
   254                           
   255                           	psect	cstackBANK0
   256  0020                     __pcstackBANK0:	
   257  0020                     main@Input_nub:	
   258                           
   259                           ; 1 bytes @ 0x0
   260  0020                     	ds	1
   261  0021                     main@i:	
   262                           
   263                           ; 2 bytes @ 0x1
   264  0021                     	ds	2
   265                           
   266                           	psect	maintext
   267  0725                     __pmaintext:	
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 11 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  i               2    1[BANK0 ] int 
   278 ;;  Input_nub       1    0[BANK0 ] unsigned char 
   279 ;;  tmp1            1    0        unsigned char 
   280 ;;  tmp             1    0        unsigned char 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  2   75[None  ] int 
   283 ;; Registers used:
   284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:         0       3       0       0       0
   292 ;;      Temps:          3       0       0       0       0
   293 ;;      Totals:         3       3       0       0       0
   294 ;;Total ram usage:        6 bytes
   295 ;; Hardware stack levels required when called:    3
   296 ;; This function calls:
   297 ;;		_Dispaly
   298 ;;		_Select4
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           
   305                           ;psect for function _main
   306  0725                     _main:	
   307                           
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   310  0725  1283               	bcf	3,5	;RP0=0, select bank0
   311  0726  1303               	bcf	3,6	;RP1=0, select bank0
   312  0727  0185               	clrf	5	;volatile
   313  0728  0186               	clrf	6	;volatile
   314  0729  0187               	clrf	7	;volatile
   315  072A  0188               	clrf	8	;volatile
   316  072B  0189               	clrf	9	;volatile
   317  072C  1683               	bsf	3,5	;RP0=1, select bank3
   318  072D  1703               	bsf	3,6	;RP1=1, select bank3
   319  072E  0189               	clrf	9	;volatile
   320  072F  3001               	movlw	1
   321  0730  0088               	movwf	8	;volatile
   322  0731  3001               	movlw	1
   323  0732  1683               	bsf	3,5	;RP0=1, select bank1
   324  0733  1303               	bcf	3,6	;RP1=0, select bank1
   325  0734  0085               	movwf	5	;volatile
   326  0735  3001               	movlw	1
   327  0736  0086               	movwf	6	;volatile
   328                           
   329                           ;main.c: 14: unsigned char tmp,tmp1;
   330                           ;main.c: 15: unsigned char Input_nub;
   331                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   332                           ;init.c: 7: ANSELH= 0;
   333                           ;init.c: 8: ANSEL = 0b00000001;
   334                           ;init.c: 9: TRISA = 0b00000001;
   335                           ;init.c: 12: TRISB = 0b00000001;
   336                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   337  0737  0187               	clrf	7	;volatile
   338  0738  0188               	clrf	8	;volatile
   339  0739  30F8               	movlw	248
   340  073A  0089               	movwf	9	;volatile
   341                           
   342                           ;init.c: 18: OPTION_REG = 0b00001000;
   343  073B  3008               	movlw	8
   344  073C  0081               	movwf	1	;volatile
   345                           
   346                           ;init.c: 21: ADCON1 = 0;
   347  073D  019F               	clrf	31	;volatile
   348                           
   349                           ;init.c: 22: ADCON0 = 0b01000001;
   350  073E  3041               	movlw	65
   351  073F  1283               	bcf	3,5	;RP0=0, select bank0
   352  0740  1303               	bcf	3,6	;RP1=0, select bank0
   353  0741  009F               	movwf	31	;volatile
   354                           
   355                           ;init.c: 25: PORTD = 0xFF;
   356  0742  30FF               	movlw	255
   357  0743  0088               	movwf	8	;volatile
   358                           
   359                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   360  0744  3002               	movlw	2
   361  0745  00FB               	movwf	??_main+2
   362  0746  3086               	movlw	134
   363  0747  00FA               	movwf	??_main+1
   364  0748  3099               	movlw	153
   365  0749  00F9               	movwf	??_main
   366  074A                     u137:	
   367  074A  0BF9               	decfsz	??_main,f
   368  074B  2F4A               	goto	u137
   369  074C  0BFA               	decfsz	??_main+1,f
   370  074D  2F4A               	goto	u137
   371  074E  0BFB               	decfsz	??_main+2,f
   372  074F  2F4A               	goto	u137
   373                           
   374                           ;init.c: 27: PORTD = 0;
   375  0750  1283               	bcf	3,5	;RP0=0, select bank0
   376  0751  1303               	bcf	3,6	;RP1=0, select bank0
   377  0752  0188               	clrf	8	;volatile
   378                           
   379                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   380  0753  3002               	movlw	2
   381  0754  00FB               	movwf	??_main+2
   382  0755  3086               	movlw	134
   383  0756  00FA               	movwf	??_main+1
   384  0757  3099               	movlw	153
   385  0758  00F9               	movwf	??_main
   386  0759                     u147:	
   387  0759  0BF9               	decfsz	??_main,f
   388  075A  2F59               	goto	u147
   389  075B  0BFA               	decfsz	??_main+1,f
   390  075C  2F59               	goto	u147
   391  075D  0BFB               	decfsz	??_main+2,f
   392  075E  2F59               	goto	u147
   393  075F                     l817:	
   394                           ;main.c: 23: while (1) {
   395                           
   396                           
   397                           ;main.c: 24: Input_nub = Select4();
   398  075F  120A  118A  2789  120A  118A  	fcall	_Select4
   399  0764  00F9               	movwf	??_main
   400  0765  0879               	movf	??_main,w
   401  0766  1283               	bcf	3,5	;RP0=0, select bank0
   402  0767  1303               	bcf	3,6	;RP1=0, select bank0
   403  0768  00A0               	movwf	main@Input_nub
   404                           
   405                           ;main.c: 25: Dispaly(Input_nub);
   406  0769  0820               	movf	main@Input_nub,w
   407  076A  120A  118A  26DC  120A  118A  	fcall	_Dispaly
   408                           
   409                           ;main.c: 26: for(int i = 1 ; i< 10; i++){}
   410  076F  3001               	movlw	1
   411  0770  1283               	bcf	3,5	;RP0=0, select bank0
   412  0771  1303               	bcf	3,6	;RP1=0, select bank0
   413  0772  00A1               	movwf	main@i
   414  0773  3000               	movlw	0
   415  0774  00A2               	movwf	main@i+1
   416  0775                     L1:	
   417  0775  0822               	movf	main@i+1,w
   418  0776  3A80               	xorlw	128
   419  0777  00FF               	movwf	127
   420  0778  3080               	movlw	128
   421  0779  027F               	subwf	127,w
   422  077A  1D03               	skipz
   423  077B  2F7E               	goto	u115
   424  077C  300A               	movlw	10
   425  077D  0221               	subwf	main@i,w
   426  077E                     u115:	
   427  077E  1803               	btfsc	3,0
   428  077F  2F5F               	goto	l817
   429  0780  3001               	movlw	1
   430  0781  1283               	bcf	3,5	;RP0=0, select bank0
   431  0782  1303               	bcf	3,6	;RP1=0, select bank0
   432  0783  07A1               	addwf	main@i,f
   433  0784  1803               	skipnc
   434  0785  0AA2               	incf	main@i+1,f
   435  0786  3000               	movlw	0
   436  0787  07A2               	addwf	main@i+1,f
   437  0788  2F75               	goto	L1
   438  0789                     __end_of_main:	
   439                           
   440                           	psect	text1
   441  0789                     __ptext1:	
   442 ;; *************** function _Select4 *****************
   443 ;; Defined at:
   444 ;;		line 50 in file "prologue.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  result          1    8[COMMON] unsigned char 
   449 ;;  oldLEDs         1    7[COMMON] unsigned char 
   450 ;;  tmp             1    6[COMMON] unsigned char 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      unsigned char 
   453 ;; Registers used:
   454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         3       0       0       0       0
   462 ;;      Temps:          3       0       0       0       0
   463 ;;      Totals:         6       0       0       0       0
   464 ;;Total ram usage:        6 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    1
   467 ;; This function calls:
   468 ;;		_ReadADC
   469 ;;		_ReadSw
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _Select4
   477  0789                     _Select4:	
   478                           
   479                           ;prologue.c: 51: unsigned char tmp, oldLEDs, result;
   480                           ;prologue.c: 52: oldLEDs=PORTD;
   481                           
   482                           ;incstack = 0
   483                           ; Regs used in _Select4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   484  0789  1283               	bcf	3,5	;RP0=0, select bank0
   485  078A  1303               	bcf	3,6	;RP1=0, select bank0
   486  078B  0808               	movf	8,w	;volatile
   487  078C  00F3               	movwf	??_Select4
   488  078D  0873               	movf	??_Select4,w
   489  078E  00F7               	movwf	Select4@oldLEDs
   490                           
   491                           ;prologue.c: 53: PORTD=0b00010000;
   492  078F  3010               	movlw	16
   493  0790  0088               	movwf	8	;volatile
   494  0791                     l727:	
   495                           ;prologue.c: 55: do {
   496                           
   497                           
   498                           ;prologue.c: 56: tmp = ReadADC();
   499  0791  120A  118A  2663  120A  118A  	fcall	_ReadADC
   500  0796  00F3               	movwf	??_Select4
   501  0797  0873               	movf	??_Select4,w
   502  0798  00F6               	movwf	Select4@tmp
   503                           
   504                           ;prologue.c: 57: tmp >>= 6;
   505  0799  0EF6               	swapf	Select4@tmp,f
   506  079A  0CF6               	rrf	Select4@tmp,f
   507  079B  0CF6               	rrf	Select4@tmp,f
   508  079C  3003               	movlw	3
   509  079D  05F6               	andwf	Select4@tmp,f
   510                           
   511                           ;prologue.c: 58: switch (tmp) {
   512  079E  2FAB               	goto	l737
   513  079F                     l58:	
   514                           ;prologue.c: 59: case 0: result=1; break;
   515                           
   516  079F  01F8               	clrf	Select4@result
   517  07A0  0AF8               	incf	Select4@result,f
   518  07A1  2FB9               	goto	l739
   519  07A2                     l731:	
   520                           ;prologue.c: 60: case 1: result=2; break;
   521                           
   522  07A2  3002               	movlw	2
   523  07A3  2FA7               	goto	L3
   524  07A4                     l733:	
   525                           ;prologue.c: 61: case 2: result=4; break;
   526                           
   527  07A4  3004               	movlw	4
   528  07A5  2FA7               	goto	L3
   529  07A6                     l735:	
   530                           ;prologue.c: 62: case 3: result=8;
   531                           
   532  07A6  3008               	movlw	8
   533  07A7                     L3:	
   534  07A7  00F3               	movwf	??_Select4
   535  07A8  0873               	movf	??_Select4,w
   536  07A9  00F8               	movwf	Select4@result
   537                           
   538                           ;prologue.c: 63: }
   539  07AA  2FB9               	goto	l739
   540  07AB                     l737:	
   541  07AB  0876               	movf	Select4@tmp,w
   542                           
   543                           ; Switch size 1, requested type "space"
   544                           ; Number of cases is 4, Range of values is 0 to 3
   545                           ; switch strategies available:
   546                           ; Name         Instructions Cycles
   547                           ; simple_byte           13     7 (average)
   548                           ; direct_byte           20     8 (fixed)
   549                           ; jumptable            260     6 (fixed)
   550                           ;	Chosen strategy is simple_byte
   551  07AC  3A00               	xorlw	0	; case 0
   552  07AD  1903               	skipnz
   553  07AE  2F9F               	goto	l58
   554  07AF  3A01               	xorlw	1	; case 1
   555  07B0  1903               	skipnz
   556  07B1  2FA2               	goto	l731
   557  07B2  3A03               	xorlw	3	; case 2
   558  07B3  1903               	skipnz
   559  07B4  2FA4               	goto	l733
   560  07B5  3A01               	xorlw	1	; case 3
   561  07B6  1903               	skipnz
   562  07B7  2FA6               	goto	l735
   563  07B8  2FB9               	goto	l739
   564  07B9                     l739:	
   565                           
   566                           ;prologue.c: 64: PORTD = result | 0b00010000 | (oldLEDs & 0b11000000);
   567  07B9  0877               	movf	Select4@oldLEDs,w
   568  07BA  39C0               	andlw	192
   569  07BB  0478               	iorwf	Select4@result,w
   570  07BC  3810               	iorlw	16
   571  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   572  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   573  07BF  0088               	movwf	8	;volatile
   574                           
   575                           ;prologue.c: 65: } while( ReadSw() );
   576  07C0  120A  118A  2682  120A  118A  	fcall	_ReadSw
   577  07C5  3A00               	xorlw	0
   578  07C6  1D03               	skipz
   579  07C7  2F91               	goto	l727
   580                           
   581                           ;prologue.c: 67: PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   582  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   583  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   584  07CA  0188               	clrf	8	;volatile
   585  07CB  3002               	movlw	2
   586  07CC  00F5               	movwf	??_Select4+2
   587  07CD  3086               	movlw	134
   588  07CE  00F4               	movwf	??_Select4+1
   589  07CF  3099               	movlw	153
   590  07D0  00F3               	movwf	??_Select4
   591  07D1                     u157:	
   592  07D1  0BF3               	decfsz	??_Select4,f
   593  07D2  2FD1               	goto	u157
   594  07D3  0BF4               	decfsz	??_Select4+1,f
   595  07D4  2FD1               	goto	u157
   596  07D5  0BF5               	decfsz	??_Select4+2,f
   597  07D6  2FD1               	goto	u157
   598                           
   599                           ;prologue.c: 68: PORTD = result; _delay((unsigned long)((400)*(4000000/4000.0)));
   600  07D7  0878               	movf	Select4@result,w
   601  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   602  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   603  07DA  0088               	movwf	8	;volatile
   604  07DB  3003               	movlw	3
   605  07DC  00F5               	movwf	??_Select4+2
   606  07DD  3008               	movlw	8
   607  07DE  00F4               	movwf	??_Select4+1
   608  07DF  3077               	movlw	119
   609  07E0  00F3               	movwf	??_Select4
   610  07E1                     u167:	
   611  07E1  0BF3               	decfsz	??_Select4,f
   612  07E2  2FE1               	goto	u167
   613  07E3  0BF4               	decfsz	??_Select4+1,f
   614  07E4  2FE1               	goto	u167
   615  07E5  0BF5               	decfsz	??_Select4+2,f
   616  07E6  2FE1               	goto	u167
   617                           
   618                           ;prologue.c: 69: PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   619  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   620  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   621  07E9  0188               	clrf	8	;volatile
   622  07EA  3002               	movlw	2
   623  07EB  00F5               	movwf	??_Select4+2
   624  07EC  3086               	movlw	134
   625  07ED  00F4               	movwf	??_Select4+1
   626  07EE  3099               	movlw	153
   627  07EF  00F3               	movwf	??_Select4
   628  07F0                     u177:	
   629  07F0  0BF3               	decfsz	??_Select4,f
   630  07F1  2FF0               	goto	u177
   631  07F2  0BF4               	decfsz	??_Select4+1,f
   632  07F3  2FF0               	goto	u177
   633  07F4  0BF5               	decfsz	??_Select4+2,f
   634  07F5  2FF0               	goto	u177
   635                           
   636                           ;prologue.c: 71: PORTD=oldLEDs;
   637  07F6  0877               	movf	Select4@oldLEDs,w
   638  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   639  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   640  07F9  0088               	movwf	8	;volatile
   641                           
   642                           ;prologue.c: 72: return result;
   643  07FA  0878               	movf	Select4@result,w
   644  07FB  0008               	return
   645  07FC                     __end_of_Select4:	
   646                           
   647                           	psect	text2
   648  0682                     __ptext2:	
   649 ;; *************** function _ReadSw *****************
   650 ;; Defined at:
   651 ;;		line 41 in file "prologue.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  tmp             1    2[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      unsigned char 
   658 ;; Registers used:
   659 ;;		wreg, status,2
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0
   667 ;;      Temps:          2       0       0       0       0
   668 ;;      Totals:         3       0       0       0       0
   669 ;;Total ram usage:        3 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_Select4
   675 ;;		_SelectB
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _ReadSw
   681  0682                     _ReadSw:	
   682  0682                     l51:	
   683                           ;incstack = 0
   684                           ; Regs used in _ReadSw: [wreg+status,2]
   685                           ;prologue.c: 42: unsigned char tmp;
   686                           ;prologue.c: 43: do {
   687                           
   688                           
   689                           ;prologue.c: 44: tmp = PORTB & 0b00000001;
   690  0682  1283               	bcf	3,5	;RP0=0, select bank0
   691  0683  1303               	bcf	3,6	;RP1=0, select bank0
   692  0684  0806               	movf	6,w	;volatile
   693  0685  3901               	andlw	1
   694  0686  00F0               	movwf	??_ReadSw
   695  0687  0870               	movf	??_ReadSw,w
   696  0688  00F2               	movwf	ReadSw@tmp
   697                           
   698                           ;prologue.c: 45: _delay((unsigned long)((20)*(4000000/4000.0)));
   699  0689  301A               	movlw	26
   700  068A  00F1               	movwf	??_ReadSw+1
   701  068B  30F8               	movlw	248
   702  068C  00F0               	movwf	??_ReadSw
   703  068D                     u187:	
   704  068D  0BF0               	decfsz	??_ReadSw,f
   705  068E  2E8D               	goto	u187
   706  068F  0BF1               	decfsz	??_ReadSw+1,f
   707  0690  2E8D               	goto	u187
   708  0691  0000               	nop
   709                           
   710                           ;prologue.c: 46: } while( tmp != (PORTB & 0b00000001) );
   711  0692  1283               	bcf	3,5	;RP0=0, select bank0
   712  0693  1303               	bcf	3,6	;RP1=0, select bank0
   713  0694  0806               	movf	6,w	;volatile
   714  0695  3901               	andlw	1
   715  0696  0672               	xorwf	ReadSw@tmp,w
   716  0697  1D03               	skipz
   717  0698  2E82               	goto	l51
   718                           
   719                           ;prologue.c: 47: return tmp;
   720  0699  0872               	movf	ReadSw@tmp,w
   721  069A  0008               	return
   722  069B                     __end_of_ReadSw:	
   723                           
   724                           	psect	text3
   725  0663                     __ptext3:	
   726 ;; *************** function _ReadADC *****************
   727 ;; Defined at:
   728 ;;		line 34 in file "prologue.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      unsigned char 
   735 ;; Registers used:
   736 ;;		wreg
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_Select4
   752 ;;		_SelectB
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _ReadADC
   758  0663                     _ReadADC:	
   759                           
   760                           ;prologue.c: 35: ADCON0 |= 0b00000010;
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _ReadADC: [wreg]
   764  0663  1283               	bcf	3,5	;RP0=0, select bank0
   765  0664  1303               	bcf	3,6	;RP1=0, select bank0
   766  0665  149F               	bsf	31,1	;volatile
   767  0666                     l45:	
   768                           ;prologue.c: 36: while ( (ADCON0 & 0b00000010) );
   769                           
   770  0666  189F               	btfsc	31,1	;volatile
   771  0667  2E66               	goto	l45
   772                           
   773                           ;prologue.c: 37: return ADRESH;
   774  0668  081E               	movf	30,w	;volatile
   775  0669  0008               	return
   776  066A                     __end_of_ReadADC:	
   777                           
   778                           	psect	text4
   779  06DC                     __ptext4:	
   780 ;; *************** function _Dispaly *****************
   781 ;; Defined at:
   782 ;;		line 31 in file "main.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  Postion         1    wreg     unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  Postion         1    6[COMMON] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         1       0       0       0       0
   798 ;;      Temps:          3       0       0       0       0
   799 ;;      Totals:         4       0       0       0       0
   800 ;;Total ram usage:        4 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    2
   803 ;; This function calls:
   804 ;;		_Morse_code
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _Dispaly
   812  06DC                     _Dispaly:	
   813                           
   814                           ;incstack = 0
   815                           ; Regs used in _Dispaly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   816                           ;Dispaly@Postion stored from wreg
   817  06DC  00F6               	movwf	Dispaly@Postion
   818                           
   819                           ;main.c: 33: switch(Postion){
   820  06DD  2EEC               	goto	l767
   821  06DE                     l757:	
   822                           ;main.c: 34: case 1: Morse_code(); break;
   823                           
   824  06DE  120A  118A  266A  120A  118A  	fcall	_Morse_code
   825  06E3  2EFA               	goto	l769
   826  06E4                     l759:	
   827                           ;main.c: 35: case 2: PORTD = 0b10100000; break;
   828                           
   829  06E4  2EE7               	goto	l763
   830  06E5                     l761:	
   831                           ;main.c: 36: case 4: PORTD = 0b11100000; break;
   832                           
   833  06E5  30E0               	movlw	224
   834  06E6  2EE8               	goto	L5
   835  06E7                     l763:	
   836                           ;main.c: 37: case 8: PORTD = 0b10100000; break;
   837                           
   838  06E7  30A0               	movlw	160
   839  06E8                     L5:	
   840  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   841  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   842  06EA  0088               	movwf	8	;volatile
   843                           
   844                           ;main.c: 38: }
   845  06EB  2EFA               	goto	l769
   846  06EC                     l767:	
   847  06EC  0876               	movf	Dispaly@Postion,w
   848                           
   849                           ; Switch size 1, requested type "space"
   850                           ; Number of cases is 4, Range of values is 1 to 8
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte           13     7 (average)
   854                           ; direct_byte           35    11 (fixed)
   855                           ; jumptable            263     9 (fixed)
   856                           ;	Chosen strategy is simple_byte
   857  06ED  3A01               	xorlw	1	; case 1
   858  06EE  1903               	skipnz
   859  06EF  2EDE               	goto	l757
   860  06F0  3A03               	xorlw	3	; case 2
   861  06F1  1903               	skipnz
   862  06F2  2EE4               	goto	l759
   863  06F3  3A06               	xorlw	6	; case 4
   864  06F4  1903               	skipnz
   865  06F5  2EE5               	goto	l761
   866  06F6  3A0C               	xorlw	12	; case 8
   867  06F7  1903               	skipnz
   868  06F8  2EE7               	goto	l763
   869  06F9  2EFA               	goto	l769
   870  06FA                     l769:	
   871                           
   872                           ;main.c: 39: _delay((unsigned long)((1000)*(4000000/4000.0)));
   873  06FA  3006               	movlw	6
   874  06FB  00F5               	movwf	??_Dispaly+2
   875  06FC  3013               	movlw	19
   876  06FD  00F4               	movwf	??_Dispaly+1
   877  06FE  30AD               	movlw	173
   878  06FF  00F3               	movwf	??_Dispaly
   879  0700                     u197:	
   880  0700  0BF3               	decfsz	??_Dispaly,f
   881  0701  2F00               	goto	u197
   882  0702  0BF4               	decfsz	??_Dispaly+1,f
   883  0703  2F00               	goto	u197
   884  0704  0BF5               	decfsz	??_Dispaly+2,f
   885  0705  2F00               	goto	u197
   886  0706  2F07               	nop2
   887                           
   888                           ;main.c: 40: _delay((unsigned long)((1000)*(4000000/4000.0)));
   889  0707  3006               	movlw	6
   890  0708  00F5               	movwf	??_Dispaly+2
   891  0709  3013               	movlw	19
   892  070A  00F4               	movwf	??_Dispaly+1
   893  070B  30AD               	movlw	173
   894  070C  00F3               	movwf	??_Dispaly
   895  070D                     u207:	
   896  070D  0BF3               	decfsz	??_Dispaly,f
   897  070E  2F0D               	goto	u207
   898  070F  0BF4               	decfsz	??_Dispaly+1,f
   899  0710  2F0D               	goto	u207
   900  0711  0BF5               	decfsz	??_Dispaly+2,f
   901  0712  2F0D               	goto	u207
   902  0713  2F14               	nop2
   903                           
   904                           ;main.c: 41: _delay((unsigned long)((1000)*(4000000/4000.0)));
   905  0714  3006               	movlw	6
   906  0715  00F5               	movwf	??_Dispaly+2
   907  0716  3013               	movlw	19
   908  0717  00F4               	movwf	??_Dispaly+1
   909  0718  30AD               	movlw	173
   910  0719  00F3               	movwf	??_Dispaly
   911  071A                     u217:	
   912  071A  0BF3               	decfsz	??_Dispaly,f
   913  071B  2F1A               	goto	u217
   914  071C  0BF4               	decfsz	??_Dispaly+1,f
   915  071D  2F1A               	goto	u217
   916  071E  0BF5               	decfsz	??_Dispaly+2,f
   917  071F  2F1A               	goto	u217
   918  0720  2F21               	nop2
   919                           
   920                           ;main.c: 42: PORTD = 0b00000000;
   921  0721  1283               	bcf	3,5	;RP0=0, select bank0
   922  0722  1303               	bcf	3,6	;RP1=0, select bank0
   923  0723  0188               	clrf	8	;volatile
   924  0724  0008               	return
   925  0725                     __end_of_Dispaly:	
   926                           
   927                           	psect	text5
   928  066A                     __ptext5:	
   929 ;; *************** function _Morse_code *****************
   930 ;; Defined at:
   931 ;;		line 45 in file "main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, pclath, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    1
   952 ;; This function calls:
   953 ;;		_Morse_dash
   954 ;;		_Morse_dot
   955 ;; This function is called by:
   956 ;;		_Dispaly
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _Morse_code
   962  066A                     _Morse_code:	
   963                           
   964                           ;main.c: 47: Morse_dash();
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _Morse_code: [wreg+status,2+status,0+pclath+cstack]
   968  066A  120A  118A  26BB  120A  118A  	fcall	_Morse_dash
   969                           
   970                           ;main.c: 48: Morse_dash();
   971  066F  120A  118A  26BB  120A  118A  	fcall	_Morse_dash
   972                           
   973                           ;main.c: 49: Morse_dot();
   974  0674  120A  118A  269B  120A  118A  	fcall	_Morse_dot
   975                           
   976                           ;main.c: 50: Morse_dot();
   977  0679  120A  118A  269B  120A  118A  	fcall	_Morse_dot
   978                           
   979                           ;main.c: 51: Morse_dot();
   980  067E  120A  118A  269B   	fcall	_Morse_dot
   981  0681  0008               	return
   982  0682                     __end_of_Morse_code:	
   983                           
   984                           	psect	text6
   985  069B                     __ptext6:	
   986 ;; *************** function _Morse_dot *****************
   987 ;; Defined at:
   988 ;;		line 61 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          3       0       0       0       0
  1005 ;;      Totals:         3       0       0       0       0
  1006 ;;Total ram usage:        3 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_Morse_code
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _Morse_dot
  1017  069B                     _Morse_dot:	
  1018                           
  1019                           ;main.c: 63: PORTD = 0b10000000;
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _Morse_dot: [wreg+status,2]
  1023  069B  3080               	movlw	128
  1024  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1025  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1026  069E  0088               	movwf	8	;volatile
  1027                           
  1028                           ;main.c: 64: _delay((unsigned long)((300)*(4000000/4000.0)));
  1029  069F  3002               	movlw	2
  1030  06A0  00F2               	movwf	??_Morse_dot+2
  1031  06A1  3086               	movlw	134
  1032  06A2  00F1               	movwf	??_Morse_dot+1
  1033  06A3  3099               	movlw	153
  1034  06A4  00F0               	movwf	??_Morse_dot
  1035  06A5                     u227:	
  1036  06A5  0BF0               	decfsz	??_Morse_dot,f
  1037  06A6  2EA5               	goto	u227
  1038  06A7  0BF1               	decfsz	??_Morse_dot+1,f
  1039  06A8  2EA5               	goto	u227
  1040  06A9  0BF2               	decfsz	??_Morse_dot+2,f
  1041  06AA  2EA5               	goto	u227
  1042                           
  1043                           ;main.c: 65: PORTD = 0b00000000;
  1044  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1045  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1046  06AD  0188               	clrf	8	;volatile
  1047                           
  1048                           ;main.c: 66: _delay((unsigned long)((300)*(4000000/4000.0)));
  1049  06AE  3002               	movlw	2
  1050  06AF  00F2               	movwf	??_Morse_dot+2
  1051  06B0  3086               	movlw	134
  1052  06B1  00F1               	movwf	??_Morse_dot+1
  1053  06B2  3099               	movlw	153
  1054  06B3  00F0               	movwf	??_Morse_dot
  1055  06B4                     u237:	
  1056  06B4  0BF0               	decfsz	??_Morse_dot,f
  1057  06B5  2EB4               	goto	u237
  1058  06B6  0BF1               	decfsz	??_Morse_dot+1,f
  1059  06B7  2EB4               	goto	u237
  1060  06B8  0BF2               	decfsz	??_Morse_dot+2,f
  1061  06B9  2EB4               	goto	u237
  1062  06BA  0008               	return
  1063  06BB                     __end_of_Morse_dot:	
  1064                           
  1065                           	psect	text7
  1066  06BB                     __ptext7:	
  1067 ;; *************** function _Morse_dash *****************
  1068 ;; Defined at:
  1069 ;;		line 54 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0
  1085 ;;      Temps:          3       0       0       0       0
  1086 ;;      Totals:         3       0       0       0       0
  1087 ;;Total ram usage:        3 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_Morse_code
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _Morse_dash
  1098  06BB                     _Morse_dash:	
  1099                           
  1100                           ;main.c: 55: PORTD = 0b10000000;
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _Morse_dash: [wreg+status,2]
  1104  06BB  3080               	movlw	128
  1105  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1106  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1107  06BE  0088               	movwf	8	;volatile
  1108                           
  1109                           ;main.c: 56: _delay((unsigned long)((900)*(4000000/4000.0)));
  1110  06BF  3005               	movlw	5
  1111  06C0  00F2               	movwf	??_Morse_dash+2
  1112  06C1  3091               	movlw	145
  1113  06C2  00F1               	movwf	??_Morse_dash+1
  1114  06C3  30CF               	movlw	207
  1115  06C4  00F0               	movwf	??_Morse_dash
  1116  06C5                     u247:	
  1117  06C5  0BF0               	decfsz	??_Morse_dash,f
  1118  06C6  2EC5               	goto	u247
  1119  06C7  0BF1               	decfsz	??_Morse_dash+1,f
  1120  06C8  2EC5               	goto	u247
  1121  06C9  0BF2               	decfsz	??_Morse_dash+2,f
  1122  06CA  2EC5               	goto	u247
  1123  06CB  2ECC               	nop2
  1124                           
  1125                           ;main.c: 57: PORTD = 0b00000000;
  1126  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1127  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1128  06CE  0188               	clrf	8	;volatile
  1129                           
  1130                           ;main.c: 58: _delay((unsigned long)((300)*(4000000/4000.0)));
  1131  06CF  3002               	movlw	2
  1132  06D0  00F2               	movwf	??_Morse_dash+2
  1133  06D1  3086               	movlw	134
  1134  06D2  00F1               	movwf	??_Morse_dash+1
  1135  06D3  3099               	movlw	153
  1136  06D4  00F0               	movwf	??_Morse_dash
  1137  06D5                     u257:	
  1138  06D5  0BF0               	decfsz	??_Morse_dash,f
  1139  06D6  2ED5               	goto	u257
  1140  06D7  0BF1               	decfsz	??_Morse_dash+1,f
  1141  06D8  2ED5               	goto	u257
  1142  06D9  0BF2               	decfsz	??_Morse_dash+2,f
  1143  06DA  2ED5               	goto	u257
  1144  06DB  0008               	return
  1145  06DC                     __end_of_Morse_dash:	
  1146  007E                     btemp	set	126	;btemp
  1147  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Select4
    _Select4->_ReadSw
    _Morse_code->_Morse_dash
    _Morse_code->_Morse_dot

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     275
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            _Dispaly
                            _Select4
 ---------------------------------------------------------------------------------
 (1) _Select4                                              6     6      0     184
                                              3 COMMON     6     6      0
                            _ReadADC
                             _ReadSw
 ---------------------------------------------------------------------------------
 (2) _ReadSw                                               3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dispaly                                              4     4      0      22
                                              3 COMMON     4     4      0
                         _Morse_code
 ---------------------------------------------------------------------------------
 (2) _Morse_code                                           0     0      0       0
                         _Morse_dash
                          _Morse_dot
 ---------------------------------------------------------------------------------
 (3) _Morse_dot                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Morse_dash                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Dispaly
     _Morse_code
       _Morse_dash
       _Morse_dot
   _Select4
     _ReadADC
     _ReadSw

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Nov 04 11:26:27 2017

                       pc 0002                        l51 0682                        l45 0666  
                      l58 079F                        fsr 0004                       l731 07A2  
                     l733 07A4                       l735 07A6                       l727 0791  
                     l761 06E5                       l737 07AB                       l817 075F  
                     l763 06E7                       l739 07B9                       l757 06DE  
                     l759 06E4                       l767 06EC                       l769 06FA  
                     u115 077E                       u207 070D                       u217 071A  
                     u137 074A                       u227 06A5                       u147 0759  
                     u237 06B4                       u157 07D1                       u247 06C5  
                     u167 07E1                       u257 06D5                       u177 07F0  
                     u187 068D                       u197 0700              __CFG_LVP$OFF 0000  
           __CFG_DEBUG$ON 0000                      _main 0725                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000             main@Input_nub 0020  
         __end_of_Dispaly 0725             Select4@result 0078           __end_of_ReadADC 066A  
         __end_of_Select4 07FC                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000                     main@i 0021            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          Select4@oldLEDs 0077                Select4@tmp 0076           __initialization 07FC  
            __end_of_main 0789                    ??_main 0079                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ANSELH 0189  
               ??_Dispaly 0073                 ??_ReadADC 0070                    _ReadSw 0682  
               ??_Select4 0073                _Morse_dash 06BB                _Morse_code 066A  
      __size_of_Morse_dot 0020            _Student_Number 0009   __end_of__initialization 07FC  
          __pcstackCOMMON 0070    __end_of_Student_Number 000D         __end_of_Morse_dot 06BB  
                 ?_ReadSw 0070               ?_Morse_dash 0070               ?_Morse_code 0070  
              __pmaintext 0725                __stringtab 0003                   _Dispaly 06DC  
                 _ReadADC 0663                   _Select4 0789           __size_of_ReadSw 0019  
                 __ptext1 0789                   __ptext2 0682                   __ptext3 0663  
                 __ptext4 06DC                   __ptext5 066A                   __ptext6 069B  
                 __ptext7 06BB       __size_of_Morse_dash 0021       __size_of_Morse_code 0018  
    end_of_initialization 07FC                 ReadSw@tmp 0072            __end_of_ReadSw 069B  
     start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_ReadSw 0070  
            ??_Morse_dash 0070              ??_Morse_code 0073                 _Morse_dot 069B  
          Dispaly@Postion 0076                 ___latbits 0002             __pcstackBANK0 0020  
      __end_of_Morse_dash 06DC        __end_of_Morse_code 0682                  ?_Dispaly 0070  
                ?_ReadADC 0070                  ?_Select4 0070                ?_Morse_dot 0070  
               __pstrings 0003               __stringbase 0008          __size_of_Dispaly 0049  
        __size_of_ReadADC 0007               ??_Morse_dot 0070          __size_of_Select4 0073  
      __end_of__stringtab 0009         __CFG_BOR4V$BOR21V 0000             __size_of_main 0064  
               stringcode 0003                _OPTION_REG 0081                  stringdir 0003  
                stringtab 0003  
