

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 15 01:01:33 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.44
    13                           ; Generated 14/09/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  000B                     _INTCON	set	11
   125  0009                     _PORTE	set	9
   126  0007                     _PORTC	set	7
   127  0005                     _PORTA	set	5
   128  001F                     _ADCON0bits	set	31
   129  0008                     _PORTD	set	8
   130  0006                     _PORTB	set	6
   131  001E                     _ADRESH	set	30
   132  001F                     _ADCON0	set	31
   133  0066                     _ADIF	set	102
   134  008C                     _PIE1	set	140
   135  009F                     _ADCON1	set	159
   136  0081                     _OPTION_REG	set	129
   137  0089                     _TRISE	set	137
   138  0088                     _TRISD	set	136
   139  0087                     _TRISC	set	135
   140  0086                     _TRISB	set	134
   141  0085                     _TRISA	set	133
   142  0188                     _ANSEL	set	392
   143  0189                     _ANSELH	set	393
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  0015                     start_initialization:	
   149  0015                     __initialization:	
   150  0015                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  0015                     __end_of__initialization:	
   154  0015  0183               	clrf	3
   155  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_ADC_Init:	
   160  0070                     ?_ISR:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ??_ISR:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?_main:	
   167                           ; 1 bytes @ 0x0
   168                           
   169                           
   170                           ; 2 bytes @ 0x0
   171  0070                     	ds	4
   172  0074                     ??_ADC_Init:	
   173  0074                     ??_main:	
   174                           ; 1 bytes @ 0x4
   175                           
   176                           
   177                           ; 1 bytes @ 0x4
   178  0074                     	ds	3
   179                           
   180                           	psect	maintext
   181  0019                     __pmaintext:	
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 18 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  2   81[None  ] int 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0, pclath, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : B00/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   201 ;;      Params:         0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0
   203 ;;      Temps:          3       0       0       0       0
   204 ;;      Totals:         3       0       0       0       0
   205 ;;Total ram usage:        3 bytes
   206 ;; Hardware stack levels required when called:    2
   207 ;; This function calls:
   208 ;;		_ADC_Init
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           
   215                           ;psect for function _main
   216  0019                     _main:	
   217                           
   218                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   219                           
   220                           ;incstack = 0
   221                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   222  0019  1283               	bcf	3,5	;RP0=0, select bank0
   223  001A  1303               	bcf	3,6	;RP1=0, select bank0
   224  001B  0185               	clrf	5	;volatile
   225  001C  0186               	clrf	6	;volatile
   226  001D  0187               	clrf	7	;volatile
   227  001E  0188               	clrf	8	;volatile
   228  001F  0189               	clrf	9	;volatile
   229                           
   230                           ;init.c: 7: ANSELH= 0;
   231  0020  1683               	bsf	3,5	;RP0=1, select bank3
   232  0021  1703               	bsf	3,6	;RP1=1, select bank3
   233  0022  0189               	clrf	9	;volatile
   234                           
   235                           ;init.c: 8: ANSEL = 0b00000001;
   236  0023  3001               	movlw	1
   237  0024  0088               	movwf	8	;volatile
   238                           
   239                           ;init.c: 9: TRISA = 0b00000001;
   240  0025  3001               	movlw	1
   241  0026  1683               	bsf	3,5	;RP0=1, select bank1
   242  0027  1303               	bcf	3,6	;RP1=0, select bank1
   243  0028  0085               	movwf	5	;volatile
   244                           
   245                           ;init.c: 12: TRISB = 0b00000001;
   246  0029  3001               	movlw	1
   247  002A  0086               	movwf	6	;volatile
   248                           
   249                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   250  002B  0187               	clrf	7	;volatile
   251  002C  0188               	clrf	8	;volatile
   252  002D  30F8               	movlw	248
   253  002E  0089               	movwf	9	;volatile
   254                           
   255                           ;init.c: 18: OPTION_REG = 0b00001000;
   256  002F  3008               	movlw	8
   257  0030  0081               	movwf	1	;volatile
   258                           
   259                           ;init.c: 21: ADCON1 = 0;
   260  0031  019F               	clrf	31	;volatile
   261                           
   262                           ;init.c: 22: ADCON0 = 0b01000001;
   263  0032  3041               	movlw	65
   264  0033  1283               	bcf	3,5	;RP0=0, select bank0
   265  0034  1303               	bcf	3,6	;RP1=0, select bank0
   266  0035  009F               	movwf	31	;volatile
   267                           
   268                           ;init.c: 25: PORTD = 0xFF;
   269  0036  30FF               	movlw	255
   270  0037  0088               	movwf	8	;volatile
   271                           
   272                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   273  0038  3002               	movlw	2
   274  0039  00F6               	movwf	??_main+2
   275  003A  3086               	movlw	134
   276  003B  00F5               	movwf	??_main+1
   277  003C  3099               	movlw	153
   278  003D  00F4               	movwf	??_main
   279  003E                     u67:	
   280  003E  0BF4               	decfsz	??_main,f
   281  003F  283E               	goto	u67
   282  0040  0BF5               	decfsz	??_main+1,f
   283  0041  283E               	goto	u67
   284  0042  0BF6               	decfsz	??_main+2,f
   285  0043  283E               	goto	u67
   286                           
   287                           ;init.c: 27: PORTD = 0;
   288  0044  1283               	bcf	3,5	;RP0=0, select bank0
   289  0045  1303               	bcf	3,6	;RP1=0, select bank0
   290  0046  0188               	clrf	8	;volatile
   291                           
   292                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   293  0047  3002               	movlw	2
   294  0048  00F6               	movwf	??_main+2
   295  0049  3086               	movlw	134
   296  004A  00F5               	movwf	??_main+1
   297  004B  3099               	movlw	153
   298  004C  00F4               	movwf	??_main
   299  004D                     u77:	
   300  004D  0BF4               	decfsz	??_main,f
   301  004E  284D               	goto	u77
   302  004F  0BF5               	decfsz	??_main+1,f
   303  0050  284D               	goto	u77
   304  0051  0BF6               	decfsz	??_main+2,f
   305  0052  284D               	goto	u77
   306                           
   307                           ;main.c: 25: ADC_Init();
   308  0053  120A  118A  206C  120A  118A  	fcall	_ADC_Init
   309  0058                     l82:	
   310                           ;main.c: 30: while (1) {
   311                           
   312  0058  2858               	goto	l82
   313  0059                     __end_of_main:	
   314                           
   315                           	psect	text1
   316  006C                     __ptext1:	
   317 ;; *************** function _ADC_Init *****************
   318 ;; Defined at:
   319 ;;		line 44 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; Hardware stack levels required when called:    1
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           
   348                           ;psect for function _ADC_Init
   349  006C                     _ADC_Init:	
   350                           
   351                           ;main.c: 45: ADCON1 = 0b00000000;
   352                           
   353                           ;incstack = 0
   354                           ; Regs used in _ADC_Init: [wreg+status,2]
   355  006C  1683               	bsf	3,5	;RP0=1, select bank1
   356  006D  1303               	bcf	3,6	;RP1=0, select bank1
   357  006E  019F               	clrf	31	;volatile
   358                           
   359                           ;main.c: 46: INTCON = 0b11000000;
   360  006F  30C0               	movlw	192
   361  0070  008B               	movwf	11	;volatile
   362                           
   363                           ;main.c: 47: PIE1 = 0b01000000;
   364  0071  3040               	movlw	64
   365  0072  008C               	movwf	12	;volatile
   366                           
   367                           ;main.c: 48: ADCON0 = 0b00000011;
   368  0073  3003               	movlw	3
   369  0074  1283               	bcf	3,5	;RP0=0, select bank0
   370  0075  1303               	bcf	3,6	;RP1=0, select bank0
   371  0076  009F               	movwf	31	;volatile
   372  0077  0008               	return
   373  0078                     __end_of_ADC_Init:	
   374                           
   375                           	psect	text2
   376  0059                     __ptext2:	
   377 ;; *************** function _ISR *****************
   378 ;; Defined at:
   379 ;;		line 6 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          4       0       0       0       0
   396 ;;      Totals:         4       0       0       0       0
   397 ;;Total ram usage:        4 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		Interrupt level 1
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _ISR
   408  0059                     _ISR:	
   409                           
   410                           ;main.c: 8: if(ADIF)
   411  0059  1F0C               	btfss	12,6	;volatile
   412  005A  2861               	goto	i1l77
   413                           
   414                           ;main.c: 9: {
   415                           ;main.c: 10: ADIF = 0;
   416  005B  130C               	bcf	12,6	;volatile
   417                           
   418                           ;main.c: 11: PORTD = ADRESH;
   419  005C  081E               	movf	30,w	;volatile
   420  005D  0088               	movwf	8	;volatile
   421                           
   422                           ;main.c: 12: ADCON0 = 0b00000001;
   423  005E  3001               	movlw	1
   424  005F  009F               	movwf	31	;volatile
   425                           
   426                           ;main.c: 13: ADCON0bits.GO = 1;
   427  0060  149F               	bsf	31,1	;volatile
   428  0061                     i1l77:	
   429  0061  0873               	movf	??_ISR+3,w
   430  0062  00FF               	movwf	127
   431  0063  0872               	movf	??_ISR+2,w
   432  0064  008A               	movwf	10
   433  0065  0871               	movf	??_ISR+1,w
   434  0066  0084               	movwf	4
   435  0067  0E70               	swapf	??_ISR^(0+-128),w
   436  0068  0083               	movwf	3
   437  0069  0EFE               	swapf	126,f
   438  006A  0E7E               	swapf	126,w
   439  006B  0009               	retfie
   440  006C                     __end_of_ISR:	
   441  007E                     btemp	set	126	;btemp
   442  007E                     wtemp0	set	126
   443                           
   444                           	psect	intentry
   445  0004                     __pintentry:	
   446                           ;incstack = 0
   447                           ; Regs used in _ISR: [wreg]
   448                           
   449  0004                     interrupt_function:	
   450  007E                     saved_w	set	btemp
   451  0004  00FE               	movwf	btemp
   452  0005  0E03               	swapf	3,w
   453  0006  00F0               	movwf	??_ISR
   454  0007  0804               	movf	4,w
   455  0008  00F1               	movwf	??_ISR+1
   456  0009  080A               	movf	10,w
   457  000A  00F2               	movwf	??_ISR+2
   458  000B  1283               	bcf	3,5	;RP0=0, select bank0
   459  000C  1303               	bcf	3,6	;RP1=0, select bank0
   460  000D  087F               	movf	btemp+1,w
   461  000E  00F3               	movwf	??_ISR+3
   462  000F  120A  118A  2859   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 15 01:01:33 2017

                      l82 0058                        u67 003E                        u77 004D  
                     _ISR 0059                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _ADIF 0066             __CFG_DEBUG$ON 0000  
                    _PIE1 008C                      i1l77 0061                      _main 0019  
                    btemp 007E          __end_of_ADC_Init 0078                      start 0012  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0015              __end_of_main 0059                    ??_main 0074  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ANSELH 0189                    _INTCON 000B                 ?_ADC_Init 0070  
                  saved_w 007E   __end_of__initialization 0015            __pcstackCOMMON 0070  
              ??_ADC_Init 0074                __pmaintext 0019                __pintentry 0004  
                 __ptext1 006C                   __ptext2 0059              __size_of_ISR 0013  
    end_of_initialization 0015         __size_of_ADC_Init 000C       start_initialization 0015  
             __end_of_ISR 006C  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
                _ADC_Init 006C         interrupt_function 0004                _ADCON0bits 001F  
       __CFG_BOR4V$BOR21V 0000             __size_of_main 0040                  intlevel1 0000  
              _OPTION_REG 0081  
