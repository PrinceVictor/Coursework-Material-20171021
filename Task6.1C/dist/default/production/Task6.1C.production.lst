

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Nov 26 21:21:10 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.44
    14                           ; Generated 14/09/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  000B                     _INTCON	set	11
   126  0009                     _PORTE	set	9
   127  0007                     _PORTC	set	7
   128  0005                     _PORTA	set	5
   129  001F                     _ADCON0bits	set	31
   130  0008                     _PORTD	set	8
   131  0006                     _PORTB	set	6
   132  001E                     _ADRESH	set	30
   133  001F                     _ADCON0	set	31
   134  0066                     _ADIF	set	102
   135  008C                     _PIE1	set	140
   136  009F                     _ADCON1	set	159
   137  0081                     _OPTION_REG	set	129
   138  0089                     _TRISE	set	137
   139  0088                     _TRISD	set	136
   140  0087                     _TRISC	set	135
   141  0086                     _TRISB	set	134
   142  0085                     _TRISA	set	133
   143  009E                     _ADRESL	set	158
   144  0188                     _ANSEL	set	392
   145  0189                     _ANSELH	set	393
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  0015                     start_initialization:	
   151  0015                     __initialization:	
   152  0015                     end_of_initialization:	
   153                           ;End of C runtime variable initialization code
   154                           
   155  0015                     __end_of__initialization:	
   156  0015  0183               	clrf	3
   157  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   158                           
   159                           	psect	cstackCOMMON
   160  0070                     __pcstackCOMMON:	
   161  0070                     ?_ADC_Init:	
   162  0070                     ?_ISR:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0070                     ??_ISR:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0070                     ?_main:	
   169                           ; 1 bytes @ 0x0
   170                           
   171                           
   172                           ; 2 bytes @ 0x0
   173  0070                     	ds	6
   174  0076                     ??_ADC_Init:	
   175                           
   176                           	psect	cstackBANK0
   177  0020                     __pcstackBANK0:	
   178                           ; 1 bytes @ 0x6
   179                           
   180  0020                     ??_main:	
   181                           
   182                           ; 1 bytes @ 0x0
   183  0020                     	ds	3
   184                           
   185                           	psect	maintext
   186  0019                     __pmaintext:	
   187 ;;
   188 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   189 ;;
   190 ;; *************** function _main *****************
   191 ;; Defined at:
   192 ;;		line 17 in file "main.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  2   83[None  ] int 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, pclath, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : B00/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   206 ;;      Params:         0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0
   208 ;;      Temps:          0       3       0       0       0
   209 ;;      Totals:         0       3       0       0       0
   210 ;;Total ram usage:        3 bytes
   211 ;; Hardware stack levels required when called:    2
   212 ;; This function calls:
   213 ;;		_ADC_Init
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           
   220                           ;psect for function _main
   221  0019                     _main:	
   222                           
   223                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   224                           
   225                           ;incstack = 0
   226                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   227  0019  1283               	bcf	3,5	;RP0=0, select bank0
   228  001A  1303               	bcf	3,6	;RP1=0, select bank0
   229  001B  0185               	clrf	5	;volatile
   230  001C  0186               	clrf	6	;volatile
   231  001D  0187               	clrf	7	;volatile
   232  001E  0188               	clrf	8	;volatile
   233  001F  0189               	clrf	9	;volatile
   234                           
   235                           ;init.c: 7: ANSELH= 0;
   236  0020  1683               	bsf	3,5	;RP0=1, select bank3
   237  0021  1703               	bsf	3,6	;RP1=1, select bank3
   238  0022  0189               	clrf	9	;volatile
   239                           
   240                           ;init.c: 8: ANSEL = 0b00000001;
   241  0023  3001               	movlw	1
   242  0024  0088               	movwf	8	;volatile
   243                           
   244                           ;init.c: 9: TRISA = 0b00000001;
   245  0025  3001               	movlw	1
   246  0026  1683               	bsf	3,5	;RP0=1, select bank1
   247  0027  1303               	bcf	3,6	;RP1=0, select bank1
   248  0028  0085               	movwf	5	;volatile
   249                           
   250                           ;init.c: 12: TRISB = 0b00000001;
   251  0029  3001               	movlw	1
   252  002A  0086               	movwf	6	;volatile
   253                           
   254                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   255  002B  0187               	clrf	7	;volatile
   256  002C  0188               	clrf	8	;volatile
   257  002D  30F8               	movlw	248
   258  002E  0089               	movwf	9	;volatile
   259                           
   260                           ;init.c: 18: OPTION_REG = 0b00001000;
   261  002F  3008               	movlw	8
   262  0030  0081               	movwf	1	;volatile
   263                           
   264                           ;init.c: 21: ADCON1 = 0;
   265  0031  019F               	clrf	31	;volatile
   266                           
   267                           ;init.c: 22: ADCON0 = 0b01000001;
   268  0032  3041               	movlw	65
   269  0033  1283               	bcf	3,5	;RP0=0, select bank0
   270  0034  1303               	bcf	3,6	;RP1=0, select bank0
   271  0035  009F               	movwf	31	;volatile
   272                           
   273                           ;init.c: 25: PORTD = 0xFF;
   274  0036  30FF               	movlw	255
   275  0037  0088               	movwf	8	;volatile
   276                           
   277                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   278  0038  3002               	movlw	2
   279  0039  1283               	bcf	3,5	;RP0=0, select bank0
   280  003A  1303               	bcf	3,6	;RP1=0, select bank0
   281  003B  00A2               	movwf	??_main+2
   282  003C  3086               	movlw	134
   283  003D  00A1               	movwf	??_main+1
   284  003E  3098               	movlw	152
   285  003F  00A0               	movwf	??_main
   286  0040                     u87:	
   287  0040  0BA0               	decfsz	??_main,f
   288  0041  2840               	goto	u87
   289  0042  0BA1               	decfsz	??_main+1,f
   290  0043  2840               	goto	u87
   291  0044  0BA2               	decfsz	??_main+2,f
   292  0045  2840               	goto	u87
   293  0046  0000               	nop
   294                           
   295                           ;init.c: 27: PORTD = 0;
   296  0047  1283               	bcf	3,5	;RP0=0, select bank0
   297  0048  1303               	bcf	3,6	;RP1=0, select bank0
   298  0049  0188               	clrf	8	;volatile
   299                           
   300                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   301  004A  3002               	movlw	2
   302  004B  1283               	bcf	3,5	;RP0=0, select bank0
   303  004C  1303               	bcf	3,6	;RP1=0, select bank0
   304  004D  00A2               	movwf	??_main+2
   305  004E  3086               	movlw	134
   306  004F  00A1               	movwf	??_main+1
   307  0050  3098               	movlw	152
   308  0051  00A0               	movwf	??_main
   309  0052                     u97:	
   310  0052  0BA0               	decfsz	??_main,f
   311  0053  2852               	goto	u97
   312  0054  0BA1               	decfsz	??_main+1,f
   313  0055  2852               	goto	u97
   314  0056  0BA2               	decfsz	??_main+2,f
   315  0057  2852               	goto	u97
   316  0058  0000               	nop
   317                           
   318                           ;main.c: 24: ADC_Init();
   319  0059  120A  118A  2085  120A  118A  	fcall	_ADC_Init
   320  005E                     l84:	
   321                           ;main.c: 29: while (1) {
   322                           
   323  005E  285E               	goto	l84
   324  005F                     __end_of_main:	
   325                           
   326                           	psect	text1
   327  0085                     __ptext1:	
   328 ;; *************** function _ADC_Init *****************
   329 ;; Defined at:
   330 ;;		line 43 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels used:    1
   350 ;; Hardware stack levels required when called:    1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		_main
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _ADC_Init
   360  0085                     _ADC_Init:	
   361                           
   362                           ;main.c: 44: ADCON1 = 0b00000000;
   363                           
   364                           ;incstack = 0
   365                           ; Regs used in _ADC_Init: [wreg+status,2]
   366  0085  1683               	bsf	3,5	;RP0=1, select bank1
   367  0086  1303               	bcf	3,6	;RP1=0, select bank1
   368  0087  019F               	clrf	31	;volatile
   369                           
   370                           ;main.c: 45: INTCON = 0b11000000;
   371  0088  30C0               	movlw	192
   372  0089  008B               	movwf	11	;volatile
   373                           
   374                           ;main.c: 46: PIE1 = 0b01000000;
   375  008A  3040               	movlw	64
   376  008B  008C               	movwf	12	;volatile
   377                           
   378                           ;main.c: 47: ADCON0 = 0b00111111;
   379  008C  303F               	movlw	63
   380  008D  1283               	bcf	3,5	;RP0=0, select bank0
   381  008E  1303               	bcf	3,6	;RP1=0, select bank0
   382  008F  009F               	movwf	31	;volatile
   383  0090  0008               	return
   384  0091                     __end_of_ADC_Init:	
   385                           
   386                           	psect	text2
   387  005F                     __ptext2:	
   388 ;; *************** function _ISR *****************
   389 ;; Defined at:
   390 ;;		line 6 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          6       0       0       0       0
   407 ;;      Totals:         6       0       0       0       0
   408 ;;Total ram usage:        6 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		Interrupt level 1
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _ISR
   419  005F                     _ISR:	
   420                           
   421                           ;main.c: 8: if(ADIF)
   422  005F  1F0C               	btfss	12,6	;volatile
   423  0060  287A               	goto	i1l79
   424                           
   425                           ;main.c: 9: {
   426                           ;main.c: 10: ADIF = 0;
   427  0061  130C               	bcf	12,6	;volatile
   428                           
   429                           ;main.c: 11: PORTD = (ADRESH << 2 )+ (ADRESL >> 6);
   430  0062  081E               	movf	30,w	;volatile
   431  0063  00F0               	movwf	??_ISR
   432  0064  3002               	movlw	2
   433  0065                     u6_25:	
   434  0065  1003               	clrc
   435  0066  0DF0               	rlf	??_ISR,f
   436  0067  3EFF               	addlw	-1
   437  0068  1D03               	skipz
   438  0069  2865               	goto	u6_25
   439  006A  1683               	bsf	3,5	;RP0=1, select bank1
   440  006B  1303               	bcf	3,6	;RP1=0, select bank1
   441  006C  081E               	movf	30,w	;volatile
   442  006D  00F1               	movwf	??_ISR+1
   443  006E  3006               	movlw	6
   444  006F                     u7_25:	
   445  006F  1003               	clrc
   446  0070  0CF1               	rrf	??_ISR+1,f
   447  0071  3EFF               	addlw	-1
   448  0072  1D03               	skipz
   449  0073  286F               	goto	u7_25
   450  0074  0871               	movf	??_ISR+1,w
   451  0075  0770               	addwf	??_ISR,w
   452  0076  1283               	bcf	3,5	;RP0=0, select bank0
   453  0077  1303               	bcf	3,6	;RP1=0, select bank0
   454  0078  0088               	movwf	8	;volatile
   455                           
   456                           ;main.c: 14: ADCON0bits.GO = 1;
   457  0079  149F               	bsf	31,1	;volatile
   458  007A                     i1l79:	
   459  007A  0875               	movf	??_ISR+5,w
   460  007B  00FF               	movwf	127
   461  007C  0874               	movf	??_ISR+4,w
   462  007D  008A               	movwf	10
   463  007E  0873               	movf	??_ISR+3,w
   464  007F  0084               	movwf	4
   465  0080  0E72               	swapf	(??_ISR+2)^(0+-128),w
   466  0081  0083               	movwf	3
   467  0082  0EFE               	swapf	126,f
   468  0083  0E7E               	swapf	126,w
   469  0084  0009               	retfie
   470  0085                     __end_of_ISR:	
   471  007E                     btemp	set	126	;btemp
   472  007E                     wtemp0	set	126
   473                           
   474                           	psect	intentry
   475  0004                     __pintentry:	
   476                           ;incstack = 0
   477                           ; Regs used in _ISR: [wreg+status,2+status,0]
   478                           
   479  0004                     interrupt_function:	
   480  007E                     saved_w	set	btemp
   481  0004  00FE               	movwf	btemp
   482  0005  0E03               	swapf	3,w
   483  0006  00F2               	movwf	??_ISR+2
   484  0007  0804               	movf	4,w
   485  0008  00F3               	movwf	??_ISR+3
   486  0009  080A               	movf	10,w
   487  000A  00F4               	movwf	??_ISR+4
   488  000B  1283               	bcf	3,5	;RP0=0, select bank0
   489  000C  1303               	bcf	3,6	;RP1=0, select bank0
   490  000D  087F               	movf	btemp+1,w
   491  000E  00F5               	movwf	??_ISR+5
   492  000F  120A  118A  285F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Nov 26 21:21:10 2017

                      l84 005E                        u87 0040                        u97 0052  
                     _ISR 005F                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _ADIF 0066             __CFG_DEBUG$ON 0000  
                    _PIE1 008C                      i1l79 007A                      u6_25 0065  
                    u7_25 006F                      _main 0019                      btemp 007E  
        __end_of_ADC_Init 0091                      start 0012             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 005F                    ??_main 0020                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 0189                    _INTCON 000B                 ?_ADC_Init 0070  
                  saved_w 007E   __end_of__initialization 0015            __pcstackCOMMON 0070  
              ??_ADC_Init 0076                __pmaintext 0019                __pintentry 0004  
                 __ptext1 0085                   __ptext2 005F              __size_of_ISR 0026  
    end_of_initialization 0015         __size_of_ADC_Init 000C       start_initialization 0015  
             __end_of_ISR 0085  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
           __pcstackBANK0 0020                  _ADC_Init 0085         interrupt_function 0004  
              _ADCON0bits 001F         __CFG_BOR4V$BOR21V 0000             __size_of_main 0046  
                intlevel1 0000                _OPTION_REG 0081  
