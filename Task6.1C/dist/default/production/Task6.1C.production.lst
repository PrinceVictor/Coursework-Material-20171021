

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Dec 05 01:58:32 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.44
    13                           ; Generated 14/09/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  000B                     _INTCON	set	11
   125  0009                     _PORTE	set	9
   126  0007                     _PORTC	set	7
   127  0005                     _PORTA	set	5
   128  001F                     _ADCON0bits	set	31
   129  0008                     _PORTD	set	8
   130  0006                     _PORTB	set	6
   131  001E                     _ADRESH	set	30
   132  001F                     _ADCON0	set	31
   133  0066                     _ADIF	set	102
   134  008C                     _PIE1	set	140
   135  009F                     _ADCON1	set	159
   136  0081                     _OPTION_REG	set	129
   137  0089                     _TRISE	set	137
   138  0088                     _TRISD	set	136
   139  0087                     _TRISC	set	135
   140  0086                     _TRISB	set	134
   141  0085                     _TRISA	set	133
   142  009E                     _ADRESL	set	158
   143  0188                     _ANSEL	set	392
   144  0189                     _ANSELH	set	393
   145                           
   146                           ; #config settings
   147  0000                     
   148                           	psect	cinit
   149  0015                     start_initialization:	
   150  0015                     __initialization:	
   151  0015                     end_of_initialization:	
   152                           ;End of C runtime variable initialization code
   153                           
   154  0015                     __end_of__initialization:	
   155  0015  0183               	clrf	3
   156  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   157                           
   158                           	psect	cstackCOMMON
   159  0070                     __pcstackCOMMON:	
   160  0070                     ?_ADC_Init:	
   161  0070                     ?_ISR:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ??_ISR:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ?_main:	
   168                           ; 1 bytes @ 0x0
   169                           
   170                           
   171                           ; 2 bytes @ 0x0
   172  0070                     	ds	4
   173  0074                     ??_ADC_Init:	
   174  0074                     ??_main:	
   175                           ; 1 bytes @ 0x4
   176                           
   177                           
   178                           ; 1 bytes @ 0x4
   179  0074                     	ds	3
   180                           
   181                           	psect	maintext
   182  0019                     __pmaintext:	
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 15 in file "main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  2   83[None  ] int 
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0, pclath, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : B00/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   202 ;;      Params:         0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0
   204 ;;      Temps:          3       0       0       0       0
   205 ;;      Totals:         3       0       0       0       0
   206 ;;Total ram usage:        3 bytes
   207 ;; Hardware stack levels required when called:    2
   208 ;; This function calls:
   209 ;;		_ADC_Init
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           
   216                           ;psect for function _main
   217  0019                     _main:	
   218                           
   219                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   220                           
   221                           ;incstack = 0
   222                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   223  0019  1283               	bcf	3,5	;RP0=0, select bank0
   224  001A  1303               	bcf	3,6	;RP1=0, select bank0
   225  001B  0185               	clrf	5	;volatile
   226  001C  0186               	clrf	6	;volatile
   227  001D  0187               	clrf	7	;volatile
   228  001E  0188               	clrf	8	;volatile
   229  001F  0189               	clrf	9	;volatile
   230                           
   231                           ;init.c: 7: ANSELH= 0;
   232  0020  1683               	bsf	3,5	;RP0=1, select bank3
   233  0021  1703               	bsf	3,6	;RP1=1, select bank3
   234  0022  0189               	clrf	9	;volatile
   235                           
   236                           ;init.c: 8: ANSEL = 0b00000001;
   237  0023  3001               	movlw	1
   238  0024  0088               	movwf	8	;volatile
   239                           
   240                           ;init.c: 9: TRISA = 0b00000001;
   241  0025  3001               	movlw	1
   242  0026  1683               	bsf	3,5	;RP0=1, select bank1
   243  0027  1303               	bcf	3,6	;RP1=0, select bank1
   244  0028  0085               	movwf	5	;volatile
   245                           
   246                           ;init.c: 12: TRISB = 0b00000001;
   247  0029  3001               	movlw	1
   248  002A  0086               	movwf	6	;volatile
   249                           
   250                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   251  002B  0187               	clrf	7	;volatile
   252  002C  0188               	clrf	8	;volatile
   253  002D  30F8               	movlw	248
   254  002E  0089               	movwf	9	;volatile
   255                           
   256                           ;init.c: 18: OPTION_REG = 0b00001000;
   257  002F  3008               	movlw	8
   258  0030  0081               	movwf	1	;volatile
   259                           
   260                           ;init.c: 21: ADCON1 = 0;
   261  0031  019F               	clrf	31	;volatile
   262                           
   263                           ;init.c: 22: ADCON0 = 0b01000001;
   264  0032  3041               	movlw	65
   265  0033  1283               	bcf	3,5	;RP0=0, select bank0
   266  0034  1303               	bcf	3,6	;RP1=0, select bank0
   267  0035  009F               	movwf	31	;volatile
   268                           
   269                           ;init.c: 25: PORTD = 0xFF;
   270  0036  30FF               	movlw	255
   271  0037  0088               	movwf	8	;volatile
   272                           
   273                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   274  0038  3002               	movlw	2
   275  0039  00F6               	movwf	??_main+2
   276  003A  3086               	movlw	134
   277  003B  00F5               	movwf	??_main+1
   278  003C  3099               	movlw	153
   279  003D  00F4               	movwf	??_main
   280  003E                     u67:	
   281  003E  0BF4               	decfsz	??_main,f
   282  003F  283E               	goto	u67
   283  0040  0BF5               	decfsz	??_main+1,f
   284  0041  283E               	goto	u67
   285  0042  0BF6               	decfsz	??_main+2,f
   286  0043  283E               	goto	u67
   287                           
   288                           ;init.c: 27: PORTD = 0;
   289  0044  1283               	bcf	3,5	;RP0=0, select bank0
   290  0045  1303               	bcf	3,6	;RP1=0, select bank0
   291  0046  0188               	clrf	8	;volatile
   292                           
   293                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   294  0047  3002               	movlw	2
   295  0048  00F6               	movwf	??_main+2
   296  0049  3086               	movlw	134
   297  004A  00F5               	movwf	??_main+1
   298  004B  3099               	movlw	153
   299  004C  00F4               	movwf	??_main
   300  004D                     u77:	
   301  004D  0BF4               	decfsz	??_main,f
   302  004E  284D               	goto	u77
   303  004F  0BF5               	decfsz	??_main+1,f
   304  0050  284D               	goto	u77
   305  0051  0BF6               	decfsz	??_main+2,f
   306  0052  284D               	goto	u77
   307                           
   308                           ;main.c: 22: ADC_Init();
   309  0053  120A  118A  206E  120A  118A  	fcall	_ADC_Init
   310  0058                     l84:	
   311                           ;main.c: 27: while (1) {
   312                           
   313  0058  2858               	goto	l84
   314  0059                     __end_of_main:	
   315                           
   316                           	psect	text1
   317  006E                     __ptext1:	
   318 ;; *************** function _ADC_Init *****************
   319 ;; Defined at:
   320 ;;		line 41 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _ADC_Init
   350  006E                     _ADC_Init:	
   351                           
   352                           ;main.c: 42: ADCON1 = 0b10000000;
   353                           
   354                           ;incstack = 0
   355                           ; Regs used in _ADC_Init: [wreg]
   356  006E  3080               	movlw	128
   357  006F  1683               	bsf	3,5	;RP0=1, select bank1
   358  0070  1303               	bcf	3,6	;RP1=0, select bank1
   359  0071  009F               	movwf	31	;volatile
   360                           
   361                           ;main.c: 43: INTCON = 0b11000000;
   362  0072  30C0               	movlw	192
   363  0073  008B               	movwf	11	;volatile
   364                           
   365                           ;main.c: 44: PIE1 = 0b01000000;
   366  0074  3040               	movlw	64
   367  0075  008C               	movwf	12	;volatile
   368                           
   369                           ;main.c: 45: ADCON0 = 0b00111111;
   370  0076  303F               	movlw	63
   371  0077  1283               	bcf	3,5	;RP0=0, select bank0
   372  0078  1303               	bcf	3,6	;RP1=0, select bank0
   373  0079  009F               	movwf	31	;volatile
   374  007A  0008               	return
   375  007B                     __end_of_ADC_Init:	
   376                           
   377                           	psect	text2
   378  0059                     __ptext2:	
   379 ;; *************** function _ISR *****************
   380 ;; Defined at:
   381 ;;		line 6 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          4       0       0       0       0
   398 ;;      Totals:         4       0       0       0       0
   399 ;;Total ram usage:        4 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		Interrupt level 1
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _ISR
   410  0059                     _ISR:	
   411                           
   412                           ;main.c: 8: if(ADIF)
   413  0059  1F0C               	btfss	12,6	;volatile
   414  005A  2863               	goto	i1l79
   415                           
   416                           ;main.c: 9: {
   417                           ;main.c: 10: ADIF = 0;
   418  005B  130C               	bcf	12,6	;volatile
   419                           
   420                           ;main.c: 11: PORTD = ADRESL ;
   421  005C  1683               	bsf	3,5	;RP0=1, select bank1
   422  005D  1303               	bcf	3,6	;RP1=0, select bank1
   423  005E  081E               	movf	30,w	;volatile
   424  005F  1283               	bcf	3,5	;RP0=0, select bank0
   425  0060  1303               	bcf	3,6	;RP1=0, select bank0
   426  0061  0088               	movwf	8	;volatile
   427                           
   428                           ;main.c: 12: ADCON0bits.GO = 1;
   429  0062  149F               	bsf	31,1	;volatile
   430  0063                     i1l79:	
   431  0063  0873               	movf	??_ISR+3,w
   432  0064  00FF               	movwf	127
   433  0065  0872               	movf	??_ISR+2,w
   434  0066  008A               	movwf	10
   435  0067  0871               	movf	??_ISR+1,w
   436  0068  0084               	movwf	4
   437  0069  0E70               	swapf	??_ISR^(0+-128),w
   438  006A  0083               	movwf	3
   439  006B  0EFE               	swapf	126,f
   440  006C  0E7E               	swapf	126,w
   441  006D  0009               	retfie
   442  006E                     __end_of_ISR:	
   443  007E                     btemp	set	126	;btemp
   444  007E                     wtemp0	set	126
   445                           
   446                           	psect	intentry
   447  0004                     __pintentry:	
   448                           ;incstack = 0
   449                           ; Regs used in _ISR: [wreg]
   450                           
   451  0004                     interrupt_function:	
   452  007E                     saved_w	set	btemp
   453  0004  00FE               	movwf	btemp
   454  0005  0E03               	swapf	3,w
   455  0006  00F0               	movwf	??_ISR
   456  0007  0804               	movf	4,w
   457  0008  00F1               	movwf	??_ISR+1
   458  0009  080A               	movf	10,w
   459  000A  00F2               	movwf	??_ISR+2
   460  000B  1283               	bcf	3,5	;RP0=0, select bank0
   461  000C  1303               	bcf	3,6	;RP1=0, select bank0
   462  000D  087F               	movf	btemp+1,w
   463  000E  00F3               	movwf	??_ISR+3
   464  000F  120A  118A  2859   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Dec 05 01:58:32 2017

                      l84 0058                        u67 003E                        u77 004D  
                     _ISR 0059                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _ADIF 0066             __CFG_DEBUG$ON 0000  
                    _PIE1 008C                      i1l79 0063                      _main 0019  
                    btemp 007E          __end_of_ADC_Init 007B                      start 0012  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0015              __end_of_main 0059                    ??_main 0074  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    _ANSELH 0189                    _INTCON 000B  
               ?_ADC_Init 0070                    saved_w 007E   __end_of__initialization 0015  
          __pcstackCOMMON 0070                ??_ADC_Init 0074                __pmaintext 0019  
              __pintentry 0004                   __ptext1 006E                   __ptext2 0059  
            __size_of_ISR 0015      end_of_initialization 0015         __size_of_ADC_Init 000D  
     start_initialization 0015               __end_of_ISR 006E  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002                  _ADC_Init 006E         interrupt_function 0004  
              _ADCON0bits 001F         __CFG_BOR4V$BOR21V 0000             __size_of_main 0040  
                intlevel1 0000                _OPTION_REG 0081  
