

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Nov 26 20:49:16 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.44
    14                           ; Generated 14/09/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  000B                     _INTCON	set	11
   126  0009                     _PORTE	set	9
   127  0007                     _PORTC	set	7
   128  0005                     _PORTA	set	5
   129  0008                     _PORTD	set	8
   130  0006                     _PORTB	set	6
   131  001E                     _ADRESH	set	30
   132  001F                     _ADCON0	set	31
   133  0058                     _RBIF	set	88
   134  0096                     _IOCB	set	150
   135  009F                     _ADCON1	set	159
   136  0081                     _OPTION_REG	set	129
   137  0089                     _TRISE	set	137
   138  0088                     _TRISD	set	136
   139  0087                     _TRISC	set	135
   140  0086                     _TRISB	set	134
   141  0085                     _TRISA	set	133
   142  0188                     _ANSEL	set	392
   143  0189                     _ANSELH	set	393
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  0015                     start_initialization:	
   149  0015                     __initialization:	
   150                           
   151                           ; Clear objects allocated to COMMON
   152  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   153  0016                     end_of_initialization:	
   154                           ;End of C runtime variable initialization code
   155                           
   156  0016                     __end_of__initialization:	
   157  0016  0183               	clrf	3
   158  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMMON
   161  0078                     __pbssCOMMON:	
   162  0078                     _Counters:	
   163  0078                     	ds	1
   164                           
   165                           	psect	cstackCOMMON
   166  0070                     __pcstackCOMMON:	
   167  0070                     ?_PortBint_Init:	
   168  0070                     ?_ISR:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ??_ISR:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ?_main:	
   175                           ; 1 bytes @ 0x0
   176                           
   177                           
   178                           ; 2 bytes @ 0x0
   179  0070                     	ds	5
   180  0075                     ??_PortBint_Init:	
   181  0075                     ??_main:	
   182                           ; 1 bytes @ 0x5
   183                           
   184                           
   185                           ; 1 bytes @ 0x5
   186  0075                     	ds	3
   187                           
   188                           	psect	maintext
   189  001A                     __pmaintext:	
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 16 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  2   84[None  ] int 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, pclath, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : B00/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   209 ;;      Params:         0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0
   211 ;;      Temps:          3       0       0       0       0
   212 ;;      Totals:         3       0       0       0       0
   213 ;;Total ram usage:        3 bytes
   214 ;; Hardware stack levels required when called:    2
   215 ;; This function calls:
   216 ;;		_PortBint_Init
   217 ;; This function is called by:
   218 ;;		Startup code after reset
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           
   223                           ;psect for function _main
   224  001A                     _main:	
   225                           
   226                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   227                           
   228                           ;incstack = 0
   229                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   230  001A  1283               	bcf	3,5	;RP0=0, select bank0
   231  001B  1303               	bcf	3,6	;RP1=0, select bank0
   232  001C  0185               	clrf	5	;volatile
   233  001D  0186               	clrf	6	;volatile
   234  001E  0187               	clrf	7	;volatile
   235  001F  0188               	clrf	8	;volatile
   236  0020  0189               	clrf	9	;volatile
   237                           
   238                           ;init.c: 7: ANSELH= 0;
   239  0021  1683               	bsf	3,5	;RP0=1, select bank3
   240  0022  1703               	bsf	3,6	;RP1=1, select bank3
   241  0023  0189               	clrf	9	;volatile
   242                           
   243                           ;init.c: 8: ANSEL = 0b00000001;
   244  0024  3001               	movlw	1
   245  0025  0088               	movwf	8	;volatile
   246                           
   247                           ;init.c: 9: TRISA = 0b00000001;
   248  0026  3001               	movlw	1
   249  0027  1683               	bsf	3,5	;RP0=1, select bank1
   250  0028  1303               	bcf	3,6	;RP1=0, select bank1
   251  0029  0085               	movwf	5	;volatile
   252                           
   253                           ;init.c: 12: TRISB = 0b00000001;
   254  002A  3001               	movlw	1
   255  002B  0086               	movwf	6	;volatile
   256                           
   257                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   258  002C  0187               	clrf	7	;volatile
   259  002D  0188               	clrf	8	;volatile
   260  002E  30F8               	movlw	248
   261  002F  0089               	movwf	9	;volatile
   262                           
   263                           ;init.c: 18: OPTION_REG = 0b00001000;
   264  0030  3008               	movlw	8
   265  0031  0081               	movwf	1	;volatile
   266                           
   267                           ;init.c: 21: ADCON1 = 0;
   268  0032  019F               	clrf	31	;volatile
   269                           
   270                           ;init.c: 22: ADCON0 = 0b01000001;
   271  0033  3041               	movlw	65
   272  0034  1283               	bcf	3,5	;RP0=0, select bank0
   273  0035  1303               	bcf	3,6	;RP1=0, select bank0
   274  0036  009F               	movwf	31	;volatile
   275                           
   276                           ;init.c: 25: PORTD = 0xFF;
   277  0037  30FF               	movlw	255
   278  0038  0088               	movwf	8	;volatile
   279                           
   280                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   281  0039  3002               	movlw	2
   282  003A  00F7               	movwf	??_main+2
   283  003B  3086               	movlw	134
   284  003C  00F6               	movwf	??_main+1
   285  003D  3099               	movlw	153
   286  003E  00F5               	movwf	??_main
   287  003F                     u77:	
   288  003F  0BF5               	decfsz	??_main,f
   289  0040  283F               	goto	u77
   290  0041  0BF6               	decfsz	??_main+1,f
   291  0042  283F               	goto	u77
   292  0043  0BF7               	decfsz	??_main+2,f
   293  0044  283F               	goto	u77
   294                           
   295                           ;init.c: 27: PORTD = 0;
   296  0045  1283               	bcf	3,5	;RP0=0, select bank0
   297  0046  1303               	bcf	3,6	;RP1=0, select bank0
   298  0047  0188               	clrf	8	;volatile
   299                           
   300                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   301  0048  3002               	movlw	2
   302  0049  00F7               	movwf	??_main+2
   303  004A  3086               	movlw	134
   304  004B  00F6               	movwf	??_main+1
   305  004C  3099               	movlw	153
   306  004D  00F5               	movwf	??_main
   307  004E                     u87:	
   308  004E  0BF5               	decfsz	??_main,f
   309  004F  284E               	goto	u87
   310  0050  0BF6               	decfsz	??_main+1,f
   311  0051  284E               	goto	u87
   312  0052  0BF7               	decfsz	??_main+2,f
   313  0053  284E               	goto	u87
   314                           
   315                           ;main.c: 23: PortBint_Init();
   316  0054  120A  118A  2073  120A  118A  	fcall	_PortBint_Init
   317  0059                     l653:	
   318                           ;main.c: 27: while (1) {
   319                           
   320                           
   321                           ;main.c: 28: PORTD = Counters;
   322  0059  0878               	movf	_Counters,w
   323  005A  1283               	bcf	3,5	;RP0=0, select bank0
   324  005B  1303               	bcf	3,6	;RP1=0, select bank0
   325  005C  0088               	movwf	8	;volatile
   326  005D  2859               	goto	l653
   327  005E                     __end_of_main:	
   328                           
   329                           	psect	text1
   330  0073                     __ptext1:	
   331 ;; *************** function _PortBint_Init *****************
   332 ;; Defined at:
   333 ;;		line 41 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; Hardware stack levels required when called:    1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _PortBint_Init
   363  0073                     _PortBint_Init:	
   364                           
   365                           ;main.c: 42: INTCON = 0b10001000;
   366                           
   367                           ;incstack = 0
   368                           ; Regs used in _PortBint_Init: [wreg]
   369  0073  3088               	movlw	136
   370  0074  008B               	movwf	11	;volatile
   371                           
   372                           ;main.c: 43: IOCB = 0b00000001;
   373  0075  3001               	movlw	1
   374  0076  1683               	bsf	3,5	;RP0=1, select bank1
   375  0077  1303               	bcf	3,6	;RP1=0, select bank1
   376  0078  0096               	movwf	22	;volatile
   377  0079  0008               	return
   378  007A                     __end_of_PortBint_Init:	
   379                           
   380                           	psect	text2
   381  005E                     __ptext2:	
   382 ;; *************** function _ISR *****************
   383 ;; Defined at:
   384 ;;		line 8 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          5       0       0       0       0
   401 ;;      Totals:         5       0       0       0       0
   402 ;;Total ram usage:        5 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		Interrupt level 1
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _ISR
   413  005E                     _ISR:	
   414                           
   415                           ;main.c: 9: if(RBIF){
   416  005E  1C0B               	btfss	11,0	;volatile
   417  005F  2868               	goto	i1l80
   418                           
   419                           ;main.c: 10: RBIF =0;
   420  0060  100B               	bcf	11,0	;volatile
   421                           
   422                           ;main.c: 11: Counters ++;
   423  0061  3001               	movlw	1
   424  0062  00F0               	movwf	??_ISR
   425  0063  0870               	movf	??_ISR,w
   426  0064  07F8               	addwf	_Counters,f
   427  0065                     i1l627:	
   428                           ;main.c: 13: while(PORTB == 0);
   429                           
   430  0065  0806               	movf	6,w	;volatile
   431  0066  1903               	btfsc	3,2
   432  0067  2865               	goto	i1l627
   433  0068                     i1l80:	
   434  0068  0874               	movf	??_ISR+4,w
   435  0069  00FF               	movwf	127
   436  006A  0873               	movf	??_ISR+3,w
   437  006B  008A               	movwf	10
   438  006C  0872               	movf	??_ISR+2,w
   439  006D  0084               	movwf	4
   440  006E  0E71               	swapf	(??_ISR+1)^(0+-128),w
   441  006F  0083               	movwf	3
   442  0070  0EFE               	swapf	126,f
   443  0071  0E7E               	swapf	126,w
   444  0072  0009               	retfie
   445  0073                     __end_of_ISR:	
   446  007E                     btemp	set	126	;btemp
   447  007E                     wtemp0	set	126
   448                           
   449                           	psect	intentry
   450  0004                     __pintentry:	
   451                           ;incstack = 0
   452                           ; Regs used in _ISR: [wreg+status,2+status,0]
   453                           
   454  0004                     interrupt_function:	
   455  007E                     saved_w	set	btemp
   456  0004  00FE               	movwf	btemp
   457  0005  0E03               	swapf	3,w
   458  0006  00F1               	movwf	??_ISR+1
   459  0007  0804               	movf	4,w
   460  0008  00F2               	movwf	??_ISR+2
   461  0009  080A               	movf	10,w
   462  000A  00F3               	movwf	??_ISR+3
   463  000B  1283               	bcf	3,5	;RP0=0, select bank0
   464  000C  1303               	bcf	3,6	;RP1=0, select bank0
   465  000D  087F               	movf	btemp+1,w
   466  000E  00F4               	movwf	??_ISR+4
   467  000F  120A  118A  285E   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              5 COMMON     3     3      0
                      _PortBint_Init
 ---------------------------------------------------------------------------------
 (1) _PortBint_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PortBint_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Nov 26 20:49:16 2017

                      u77 003F                        u87 004E                       l653 0059  
                     _ISR 005E                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _IOCB 0096             __CFG_DEBUG$ON 0000  
                    _RBIF 0058                      i1l80 0068                      _main 001A  
                    btemp 007E                      start 0012             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l627 0065                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0015              __end_of_main 005E                    ??_main 0075  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ANSELH 0189                    _INTCON 000B     __end_of_PortBint_Init 007A  
                  saved_w 007E   __end_of__initialization 0016            __pcstackCOMMON 0070  
              __pmaintext 001A                __pintentry 0004                   __ptext1 0073  
                 __ptext2 005E              __size_of_ISR 0015      end_of_initialization 0016  
     start_initialization 0015               __end_of_ISR 0073    __size_of_PortBint_Init 0007  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0078                 ___latbits 0002  
           _PortBint_Init 0073         interrupt_function 0004            ?_PortBint_Init 0070  
                _Counters 0078         __CFG_BOR4V$BOR21V 0000             __size_of_main 0044  
         ??_PortBint_Init 0075                  intlevel1 0000                _OPTION_REG 0081  
