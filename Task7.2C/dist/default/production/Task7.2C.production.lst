

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Nov 28 17:01:30 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.44
    14                           ; Generated 14/09/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  000B                     _INTCON	set	11
   126  0009                     _PORTE	set	9
   127  0007                     _PORTC	set	7
   128  0005                     _PORTA	set	5
   129  0008                     _PORTD	set	8
   130  0006                     _PORTB	set	6
   131  001E                     _ADRESH	set	30
   132  001F                     _ADCON0	set	31
   133  0058                     _RBIF	set	88
   134  0096                     _IOCB	set	150
   135  009F                     _ADCON1	set	159
   136  0081                     _OPTION_REG	set	129
   137  0089                     _TRISE	set	137
   138  0088                     _TRISD	set	136
   139  0087                     _TRISC	set	135
   140  0086                     _TRISB	set	134
   141  0085                     _TRISA	set	133
   142  0188                     _ANSEL	set	392
   143  0189                     _ANSELH	set	393
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  0015                     start_initialization:	
   149  0015                     __initialization:	
   150                           
   151                           ; Clear objects allocated to COMMON
   152  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   153  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   154  0017                     end_of_initialization:	
   155                           ;End of C runtime variable initialization code
   156                           
   157  0017                     __end_of__initialization:	
   158  0017  0183               	clrf	3
   159  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMMON
   162  0078                     __pbssCOMMON:	
   163  0078                     _data:	
   164  0078                     	ds	1
   165  0079                     _Counters:	
   166  0079                     	ds	1
   167                           
   168                           	psect	cstackCOMMON
   169  0070                     __pcstackCOMMON:	
   170  0070                     ?_PortBint_Init:	
   171  0070                     ?_ISR:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ??_ISR:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0070                     ?_main:	
   178                           ; 1 bytes @ 0x0
   179                           
   180                           
   181                           ; 2 bytes @ 0x0
   182  0070                     	ds	5
   183  0075                     ??_PortBint_Init:	
   184  0075                     ??_main:	
   185                           ; 1 bytes @ 0x5
   186                           
   187                           
   188                           ; 1 bytes @ 0x5
   189  0075                     	ds	3
   190                           
   191                           	psect	maintext
   192  001B                     __pmaintext:	
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 17 in file "main.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  2   83[None  ] int 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0, pclath, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : B00/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   212 ;;      Params:         0       0       0       0       0
   213 ;;      Locals:         0       0       0       0       0
   214 ;;      Temps:          3       0       0       0       0
   215 ;;      Totals:         3       0       0       0       0
   216 ;;Total ram usage:        3 bytes
   217 ;; Hardware stack levels required when called:    2
   218 ;; This function calls:
   219 ;;		_PortBint_Init
   220 ;; This function is called by:
   221 ;;		Startup code after reset
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           
   226                           ;psect for function _main
   227  001B                     _main:	
   228                           
   229                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   230                           
   231                           ;incstack = 0
   232                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   233  001B  1283               	bcf	3,5	;RP0=0, select bank0
   234  001C  1303               	bcf	3,6	;RP1=0, select bank0
   235  001D  0185               	clrf	5	;volatile
   236  001E  0186               	clrf	6	;volatile
   237  001F  0187               	clrf	7	;volatile
   238  0020  0188               	clrf	8	;volatile
   239  0021  0189               	clrf	9	;volatile
   240                           
   241                           ;init.c: 7: ANSELH= 0;
   242  0022  1683               	bsf	3,5	;RP0=1, select bank3
   243  0023  1703               	bsf	3,6	;RP1=1, select bank3
   244  0024  0189               	clrf	9	;volatile
   245                           
   246                           ;init.c: 8: ANSEL = 0b00000001;
   247  0025  3001               	movlw	1
   248  0026  0088               	movwf	8	;volatile
   249                           
   250                           ;init.c: 9: TRISA = 0b00000001;
   251  0027  3001               	movlw	1
   252  0028  1683               	bsf	3,5	;RP0=1, select bank1
   253  0029  1303               	bcf	3,6	;RP1=0, select bank1
   254  002A  0085               	movwf	5	;volatile
   255                           
   256                           ;init.c: 12: TRISB = 0b00000001;
   257  002B  3001               	movlw	1
   258  002C  0086               	movwf	6	;volatile
   259                           
   260                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   261  002D  0187               	clrf	7	;volatile
   262  002E  0188               	clrf	8	;volatile
   263  002F  30F8               	movlw	248
   264  0030  0089               	movwf	9	;volatile
   265                           
   266                           ;init.c: 18: OPTION_REG = 0b00001000;
   267  0031  3008               	movlw	8
   268  0032  0081               	movwf	1	;volatile
   269                           
   270                           ;init.c: 21: ADCON1 = 0;
   271  0033  019F               	clrf	31	;volatile
   272                           
   273                           ;init.c: 22: ADCON0 = 0b01000001;
   274  0034  3041               	movlw	65
   275  0035  1283               	bcf	3,5	;RP0=0, select bank0
   276  0036  1303               	bcf	3,6	;RP1=0, select bank0
   277  0037  009F               	movwf	31	;volatile
   278                           
   279                           ;init.c: 25: PORTD = 0xFF;
   280  0038  30FF               	movlw	255
   281  0039  0088               	movwf	8	;volatile
   282                           
   283                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   284  003A  3002               	movlw	2
   285  003B  00F7               	movwf	??_main+2
   286  003C  3086               	movlw	134
   287  003D  00F6               	movwf	??_main+1
   288  003E  3099               	movlw	153
   289  003F  00F5               	movwf	??_main
   290  0040                     u67:	
   291  0040  0BF5               	decfsz	??_main,f
   292  0041  2840               	goto	u67
   293  0042  0BF6               	decfsz	??_main+1,f
   294  0043  2840               	goto	u67
   295  0044  0BF7               	decfsz	??_main+2,f
   296  0045  2840               	goto	u67
   297                           
   298                           ;init.c: 27: PORTD = 0;
   299  0046  1283               	bcf	3,5	;RP0=0, select bank0
   300  0047  1303               	bcf	3,6	;RP1=0, select bank0
   301  0048  0188               	clrf	8	;volatile
   302                           
   303                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   304  0049  3002               	movlw	2
   305  004A  00F7               	movwf	??_main+2
   306  004B  3086               	movlw	134
   307  004C  00F6               	movwf	??_main+1
   308  004D  3099               	movlw	153
   309  004E  00F5               	movwf	??_main
   310  004F                     u77:	
   311  004F  0BF5               	decfsz	??_main,f
   312  0050  284F               	goto	u77
   313  0051  0BF6               	decfsz	??_main+1,f
   314  0052  284F               	goto	u77
   315  0053  0BF7               	decfsz	??_main+2,f
   316  0054  284F               	goto	u77
   317                           
   318                           ;main.c: 24: PortBint_Init();
   319  0055  120A  118A  2076  120A  118A  	fcall	_PortBint_Init
   320  005A                     l652:	
   321                           ;main.c: 28: while (1) {
   322                           
   323                           
   324                           ;main.c: 29: PORTD = Counters;
   325  005A  0879               	movf	_Counters,w
   326  005B  1283               	bcf	3,5	;RP0=0, select bank0
   327  005C  1303               	bcf	3,6	;RP1=0, select bank0
   328  005D  0088               	movwf	8	;volatile
   329  005E  285A               	goto	l652
   330  005F                     __end_of_main:	
   331                           
   332                           	psect	text1
   333  0076                     __ptext1:	
   334 ;; *************** function _PortBint_Init *****************
   335 ;; Defined at:
   336 ;;		line 42 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; Hardware stack levels required when called:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _PortBint_Init
   366  0076                     _PortBint_Init:	
   367                           
   368                           ;main.c: 43: IOCB = 0b00000001;
   369                           
   370                           ;incstack = 0
   371                           ; Regs used in _PortBint_Init: [wreg]
   372  0076  3001               	movlw	1
   373  0077  1683               	bsf	3,5	;RP0=1, select bank1
   374  0078  1303               	bcf	3,6	;RP1=0, select bank1
   375  0079  0096               	movwf	22	;volatile
   376                           
   377                           ;main.c: 44: INTCON = 0b10001000;
   378  007A  3088               	movlw	136
   379  007B  008B               	movwf	11	;volatile
   380  007C  0008               	return
   381  007D                     __end_of_PortBint_Init:	
   382                           
   383                           	psect	text2
   384  005F                     __ptext2:	
   385 ;; *************** function _ISR *****************
   386 ;; Defined at:
   387 ;;		line 8 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0
   403 ;;      Temps:          5       0       0       0       0
   404 ;;      Totals:         5       0       0       0       0
   405 ;;Total ram usage:        5 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		Interrupt level 1
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _ISR
   416  005F                     _ISR:	
   417                           
   418                           ;main.c: 9: if(RBIF){
   419  005F  1C0B               	btfss	11,0	;volatile
   420  0060  286B               	goto	i1l79
   421                           
   422                           ;main.c: 10: data = PORTB;
   423  0061  0806               	movf	6,w	;volatile
   424  0062  00F0               	movwf	??_ISR
   425  0063  0870               	movf	??_ISR,w
   426  0064  00F8               	movwf	_data
   427                           
   428                           ;main.c: 11: RBIF =0;
   429  0065  100B               	bcf	11,0	;volatile
   430                           
   431                           ;main.c: 12: Counters = Counters +1;
   432  0066  0879               	movf	_Counters,w
   433  0067  3E01               	addlw	1
   434  0068  00F0               	movwf	??_ISR
   435  0069  0870               	movf	??_ISR,w
   436  006A  00F9               	movwf	_Counters
   437  006B                     i1l79:	
   438  006B  0874               	movf	??_ISR+4,w
   439  006C  00FF               	movwf	127
   440  006D  0873               	movf	??_ISR+3,w
   441  006E  008A               	movwf	10
   442  006F  0872               	movf	??_ISR+2,w
   443  0070  0084               	movwf	4
   444  0071  0E71               	swapf	(??_ISR+1)^(0+-128),w
   445  0072  0083               	movwf	3
   446  0073  0EFE               	swapf	126,f
   447  0074  0E7E               	swapf	126,w
   448  0075  0009               	retfie
   449  0076                     __end_of_ISR:	
   450  007E                     btemp	set	126	;btemp
   451  007E                     wtemp0	set	126
   452                           
   453                           	psect	intentry
   454  0004                     __pintentry:	
   455                           ;incstack = 0
   456                           ; Regs used in _ISR: [wreg+status,2+status,0]
   457                           
   458  0004                     interrupt_function:	
   459  007E                     saved_w	set	btemp
   460  0004  00FE               	movwf	btemp
   461  0005  0E03               	swapf	3,w
   462  0006  00F1               	movwf	??_ISR+1
   463  0007  0804               	movf	4,w
   464  0008  00F2               	movwf	??_ISR+2
   465  0009  080A               	movf	10,w
   466  000A  00F3               	movwf	??_ISR+3
   467  000B  1283               	bcf	3,5	;RP0=0, select bank0
   468  000C  1303               	bcf	3,6	;RP1=0, select bank0
   469  000D  087F               	movf	btemp+1,w
   470  000E  00F4               	movwf	??_ISR+4
   471  000F  120A  118A  285F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              5 COMMON     3     3      0
                      _PortBint_Init
 ---------------------------------------------------------------------------------
 (1) _PortBint_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PortBint_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Nov 28 17:01:30 2017

                      u67 0040                        u77 004F                       l652 005A  
                     _ISR 005F                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _IOCB 0096             __CFG_DEBUG$ON 0000  
                    _RBIF 0058                      i1l79 006B                      _data 0078  
                    _main 001B                      btemp 007E                      start 0012  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0015              __end_of_main 005F                    ??_main 0075  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ANSELH 0189                    _INTCON 000B     __end_of_PortBint_Init 007D  
                  saved_w 007E   __end_of__initialization 0017            __pcstackCOMMON 0070  
              __pmaintext 001B                __pintentry 0004                   __ptext1 0076  
                 __ptext2 005F              __size_of_ISR 0017      end_of_initialization 0017  
     start_initialization 0015               __end_of_ISR 0076    __size_of_PortBint_Init 0007  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0078                 ___latbits 0002  
           _PortBint_Init 0076         interrupt_function 0004            ?_PortBint_Init 0070  
                _Counters 0079         __CFG_BOR4V$BOR21V 0000             __size_of_main 0044  
         ??_PortBint_Init 0075                  intlevel1 0000                _OPTION_REG 0081  
