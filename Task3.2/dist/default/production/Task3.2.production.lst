

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Oct 26 23:42:11 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129                           
   130                           	psect	idataBANK0
   131  06A5                     __pidataBANK0:	
   132                           
   133                           ;initializer for main@F1672
   134  06A5  3400               	retlw	0
   135  06A6  3401               	retlw	1
   136  06A7  3402               	retlw	2
   137  06A8  3403               	retlw	3
   138  06A9  3404               	retlw	4
   139  06AA  3405               	retlw	5
   140  06AB  3406               	retlw	6
   141  06AC  3407               	retlw	7
   142  06AD  3408               	retlw	8
   143  06AE  3409               	retlw	9
   144  06AF  340A               	retlw	10
   145  06B0  340B               	retlw	11
   146  06B1  340C               	retlw	12
   147  06B2  340D               	retlw	13
   148  06B3  340E               	retlw	14
   149  06B4  340F               	retlw	15
   150  0009                     _PORTE	set	9
   151  0007                     _PORTC	set	7
   152  0005                     _PORTA	set	5
   153  0008                     _PORTD	set	8
   154  0006                     _PORTB	set	6
   155  001E                     _ADRESH	set	30
   156  001F                     _ADCON0	set	31
   157  009F                     _ADCON1	set	159
   158  0081                     _OPTION_REG	set	129
   159  0089                     _TRISE	set	137
   160  0088                     _TRISD	set	136
   161  0087                     _TRISC	set	135
   162  0086                     _TRISB	set	134
   163  0085                     _TRISA	set	133
   164  0188                     _ANSEL	set	392
   165  0189                     _ANSELH	set	393
   166                           
   167                           ; #config settings
   168  0000                     
   169                           	psect	cinit
   170  07F0                     start_initialization:	
   171  07F0                     __initialization:	
   172                           
   173                           ; Initialize objects allocated to BANK0
   174  07F0  1383               	bcf	3,7	;select IRP bank0
   175  07F1  3043               	movlw	low (__pdataBANK0+16)
   176  07F2  00FD               	movwf	btemp+-1
   177  07F3  3006               	movlw	high __pidataBANK0
   178  07F4  00FE               	movwf	btemp
   179  07F5  30A5               	movlw	low __pidataBANK0
   180  07F6  00FF               	movwf	btemp+1
   181  07F7  3033               	movlw	low __pdataBANK0
   182  07F8  0084               	movwf	4
   183  07F9  120A  118A  26CA   	fcall	init_ram0
   184  07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  07FC                     __end_of__initialization:	
   188  07FC  0183               	clrf	3
   189  07FD  120A  118A  2F48   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	dataBANK0
   192  0033                     __pdataBANK0:	
   193  0033                     main@F1672:	
   194  0033                     	ds	16
   195                           
   196                           	psect	inittext
   197  06C6                     init_fetch0:	
   198                           ;	Called with low address in FSR and high address in W
   199                           
   200  06C6  087E               	movf	126,w
   201  06C7  008A               	movwf	10
   202  06C8  087F               	movf	127,w
   203  06C9  0082               	movwf	2
   204  06CA                     init_ram0:	
   205                           ;Called with:
   206                           ;	high address of idata address in btemp 
   207                           ;	low address of idata address in btemp+1 
   208                           ;	low address of data in FSR
   209                           ;	high address + 1 of data in btemp-1
   210                           
   211  06CA  26C6  120A  118A   	fcall	init_fetch0
   212  06CD  0080               	movwf	0
   213  06CE  0A84               	incf	4,f
   214  06CF  0804               	movf	4,w
   215  06D0  067D               	xorwf	125,w
   216  06D1  1903               	btfsc	3,2
   217  06D2  3400               	retlw	0
   218  06D3  0AFF               	incf	127,f
   219  06D4  1903               	btfsc	3,2
   220  06D5  0AFE               	incf	126,f
   221  06D6  2ECA               	goto	init_ram0
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:	
   225  0070                     ?_ReadADC:	
   226  0070                     ??_ReadADC:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_ReadSw:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_ReadSw:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_SelectB:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?___bmul:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ___bmul@multiplicand:	
   245                           ; 2 bytes @ 0x0
   246                           
   247                           
   248                           ; 1 bytes @ 0x0
   249  0070                     	ds	1
   250  0071                     ??___bmul:	
   251                           
   252                           ; 1 bytes @ 0x1
   253  0071                     	ds	1
   254  0072                     ReadSw@tmp:	
   255  0072                     ___bmul@product:	
   256                           ; 1 bytes @ 0x2
   257                           
   258                           
   259                           ; 1 bytes @ 0x2
   260  0072                     	ds	1
   261  0073                     ??_SelectB:	
   262  0073                     ___bmul@multiplier:	
   263                           ; 1 bytes @ 0x3
   264                           
   265                           
   266                           ; 1 bytes @ 0x3
   267  0073                     	ds	3
   268  0076                     SelectB@oldLEDs:	
   269                           
   270                           ; 1 bytes @ 0x6
   271  0076                     	ds	1
   272  0077                     SelectB@result:	
   273                           
   274                           ; 1 bytes @ 0x7
   275  0077                     	ds	1
   276  0078                     ??_main:	
   277                           
   278                           ; 1 bytes @ 0x8
   279  0078                     	ds	4
   280                           
   281                           	psect	cstackBANK0
   282  0020                     __pcstackBANK0:	
   283  0020                     main@LUT:	
   284                           
   285                           ; 16 bytes @ 0x0
   286  0020                     	ds	16
   287  0030                     main@TMP:	
   288                           
   289                           ; 1 bytes @ 0x10
   290  0030                     	ds	1
   291  0031                     main@A:	
   292                           
   293                           ; 1 bytes @ 0x11
   294  0031                     	ds	1
   295  0032                     main@B:	
   296                           
   297                           ; 1 bytes @ 0x12
   298  0032                     	ds	1
   299                           
   300                           	psect	maintext
   301  0748                     __pmaintext:	
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 5 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  LUT            16    0[BANK0 ] unsigned char [16]
   312 ;;  B               1   18[BANK0 ] unsigned char 
   313 ;;  A               1   17[BANK0 ] unsigned char 
   314 ;;  TMP             1   16[BANK0 ] unsigned char 
   315 ;;  tmp1            1    0        unsigned char 
   316 ;;  tmp             1    0        unsigned char 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  2   65[None  ] int 
   319 ;; Registers used:
   320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : B00/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         0      19       0       0       0
   328 ;;      Temps:          4       0       0       0       0
   329 ;;      Totals:         4      19       0       0       0
   330 ;;Total ram usage:       23 bytes
   331 ;; Hardware stack levels required when called:    2
   332 ;; This function calls:
   333 ;;		_ReadSw
   334 ;;		_SelectB
   335 ;;		___bmul
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           
   342                           ;psect for function _main
   343  0748                     _main:	
   344                           
   345                           ;main.c: 8: unsigned char tmp,tmp1,TMP;
   346                           ;main.c: 9: unsigned char A,B;
   347                           ;main.c: 10: unsigned char LUT[16] ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
   348                           
   349                           ;incstack = 0
   350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   351  0748  3020               	movlw	main@LUT& (0+255)
   352  0749  0084               	movwf	4
   353  074A  3033               	movlw	low main@F1672
   354  074B  00F8               	movwf	??_main
   355  074C  0804               	movf	4,w
   356  074D  00F9               	movwf	??_main+1
   357  074E  3010               	movlw	16
   358  074F  00FA               	movwf	??_main+2
   359  0750                     u160:	
   360  0750  0878               	movf	??_main,w
   361  0751  0084               	movwf	4
   362  0752  1383               	bcf	3,7	;select IRP bank0
   363  0753  0800               	movf	0,w
   364  0754  00FB               	movwf	??_main+3
   365  0755  0AF8               	incf	??_main,f
   366  0756  0879               	movf	??_main+1,w
   367  0757  0084               	movwf	4
   368  0758  087B               	movf	??_main+3,w
   369  0759  0080               	movwf	0
   370  075A  0AF9               	incf	??_main+1,f
   371  075B  0BFA               	decfsz	??_main+2,f
   372  075C  2F50               	goto	u160
   373                           
   374                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   375  075D  1283               	bcf	3,5	;RP0=0, select bank0
   376  075E  1303               	bcf	3,6	;RP1=0, select bank0
   377  075F  0185               	clrf	5	;volatile
   378  0760  0186               	clrf	6	;volatile
   379  0761  0187               	clrf	7	;volatile
   380  0762  0188               	clrf	8	;volatile
   381  0763  0189               	clrf	9	;volatile
   382                           
   383                           ;init.c: 7: ANSELH= 0;
   384  0764  1683               	bsf	3,5	;RP0=1, select bank3
   385  0765  1703               	bsf	3,6	;RP1=1, select bank3
   386  0766  0189               	clrf	9	;volatile
   387                           
   388                           ;init.c: 8: ANSEL = 0b00000001;
   389  0767  3001               	movlw	1
   390  0768  0088               	movwf	8	;volatile
   391                           
   392                           ;init.c: 9: TRISA = 0b00000001;
   393  0769  3001               	movlw	1
   394  076A  1683               	bsf	3,5	;RP0=1, select bank1
   395  076B  1303               	bcf	3,6	;RP1=0, select bank1
   396  076C  0085               	movwf	5	;volatile
   397                           
   398                           ;init.c: 12: TRISB = 0b00000001;
   399  076D  3001               	movlw	1
   400  076E  0086               	movwf	6	;volatile
   401                           
   402                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   403  076F  0187               	clrf	7	;volatile
   404  0770  0188               	clrf	8	;volatile
   405  0771  30F8               	movlw	248
   406  0772  0089               	movwf	9	;volatile
   407                           
   408                           ;init.c: 18: OPTION_REG = 0b00001000;
   409  0773  3008               	movlw	8
   410  0774  0081               	movwf	1	;volatile
   411                           
   412                           ;init.c: 21: ADCON1 = 0;
   413  0775  019F               	clrf	31	;volatile
   414                           
   415                           ;init.c: 22: ADCON0 = 0b01000001;
   416  0776  3041               	movlw	65
   417  0777  1283               	bcf	3,5	;RP0=0, select bank0
   418  0778  1303               	bcf	3,6	;RP1=0, select bank0
   419  0779  009F               	movwf	31	;volatile
   420                           
   421                           ;init.c: 25: PORTD = 0xFF;
   422  077A  30FF               	movlw	255
   423  077B  0088               	movwf	8	;volatile
   424                           
   425                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   426  077C  3002               	movlw	2
   427  077D  00FA               	movwf	??_main+2
   428  077E  3086               	movlw	134
   429  077F  00F9               	movwf	??_main+1
   430  0780  3099               	movlw	153
   431  0781  00F8               	movwf	??_main
   432  0782                     u197:	
   433  0782  0BF8               	decfsz	??_main,f
   434  0783  2F82               	goto	u197
   435  0784  0BF9               	decfsz	??_main+1,f
   436  0785  2F82               	goto	u197
   437  0786  0BFA               	decfsz	??_main+2,f
   438  0787  2F82               	goto	u197
   439                           
   440                           ;init.c: 27: PORTD = 0;
   441  0788  1283               	bcf	3,5	;RP0=0, select bank0
   442  0789  1303               	bcf	3,6	;RP1=0, select bank0
   443  078A  0188               	clrf	8	;volatile
   444                           
   445                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   446  078B  3002               	movlw	2
   447  078C  00FA               	movwf	??_main+2
   448  078D  3086               	movlw	134
   449  078E  00F9               	movwf	??_main+1
   450  078F  3099               	movlw	153
   451  0790  00F8               	movwf	??_main
   452  0791                     u207:	
   453  0791  0BF8               	decfsz	??_main,f
   454  0792  2F91               	goto	u207
   455  0793  0BF9               	decfsz	??_main+1,f
   456  0794  2F91               	goto	u207
   457  0795  0BFA               	decfsz	??_main+2,f
   458  0796  2F91               	goto	u207
   459  0797                     l803:	
   460                           ;main.c: 18: while (1) {
   461                           
   462                           
   463                           ;main.c: 21: PORTD = 0b10000000;
   464  0797  3080               	movlw	128
   465  0798  1283               	bcf	3,5	;RP0=0, select bank0
   466  0799  1303               	bcf	3,6	;RP1=0, select bank0
   467  079A  0088               	movwf	8	;volatile
   468                           
   469                           ;main.c: 22: A = SelectB();
   470  079B  120A  118A  26F0  120A  118A  	fcall	_SelectB
   471  07A0  00F8               	movwf	??_main
   472  07A1  0878               	movf	??_main,w
   473  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   474  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   475  07A4  00B1               	movwf	main@A
   476                           
   477                           ;main.c: 25: PORTD = 0b01000000;
   478  07A5  3040               	movlw	64
   479  07A6  0088               	movwf	8	;volatile
   480                           
   481                           ;main.c: 26: B = SelectB();
   482  07A7  120A  118A  26F0  120A  118A  	fcall	_SelectB
   483  07AC  00F8               	movwf	??_main
   484  07AD  0878               	movf	??_main,w
   485  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   486  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   487  07B0  00B2               	movwf	main@B
   488                           
   489                           ;main.c: 29: TMP = (7*A)|B;
   490  07B1  3007               	movlw	7
   491  07B2  00F8               	movwf	??_main
   492  07B3  0878               	movf	??_main,w
   493  07B4  00F0               	movwf	___bmul@multiplicand
   494  07B5  0831               	movf	main@A,w
   495  07B6  120A  118A  26B5  120A  118A  	fcall	___bmul
   496  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   497  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   498  07BD  0432               	iorwf	main@B,w
   499  07BE  00F9               	movwf	??_main+1
   500  07BF  0879               	movf	??_main+1,w
   501  07C0  00B0               	movwf	main@TMP
   502                           
   503                           ;main.c: 30: PORTD = TMP;
   504  07C1  0830               	movf	main@TMP,w
   505  07C2  0088               	movwf	8	;volatile
   506                           
   507                           ;main.c: 31: PORTD |= 0b11000000;
   508  07C3  30C0               	movlw	192
   509  07C4  00F8               	movwf	??_main
   510  07C5  0878               	movf	??_main,w
   511  07C6  0488               	iorwf	8,f	;volatile
   512  07C7                     l817:	
   513                           ;main.c: 34: while(0 == ReadSw());
   514                           
   515  07C7  120A  118A  26D7  120A  118A  	fcall	_ReadSw
   516  07CC  3A00               	xorlw	0
   517  07CD  1903               	skipnz
   518  07CE  2FC7               	goto	l817
   519                           
   520                           ;main.c: 35: _delay((unsigned long)((400)*(4000000/4000.0)));
   521  07CF  3003               	movlw	3
   522  07D0  00FA               	movwf	??_main+2
   523  07D1  3008               	movlw	8
   524  07D2  00F9               	movwf	??_main+1
   525  07D3  3077               	movlw	119
   526  07D4  00F8               	movwf	??_main
   527  07D5                     u217:	
   528  07D5  0BF8               	decfsz	??_main,f
   529  07D6  2FD5               	goto	u217
   530  07D7  0BF9               	decfsz	??_main+1,f
   531  07D8  2FD5               	goto	u217
   532  07D9  0BFA               	decfsz	??_main+2,f
   533  07DA  2FD5               	goto	u217
   534  07DB                     l821:	
   535                           ;main.c: 36: while(1 == ReadSw());
   536                           
   537  07DB  120A  118A  26D7  120A  118A  	fcall	_ReadSw
   538  07E0  3A01               	xorlw	1
   539  07E1  1903               	skipnz
   540  07E2  2FDB               	goto	l821
   541                           
   542                           ;main.c: 37: _delay((unsigned long)((400)*(4000000/4000.0)));
   543  07E3  3003               	movlw	3
   544  07E4  00FA               	movwf	??_main+2
   545  07E5  3008               	movlw	8
   546  07E6  00F9               	movwf	??_main+1
   547  07E7  3077               	movlw	119
   548  07E8  00F8               	movwf	??_main
   549  07E9                     u227:	
   550  07E9  0BF8               	decfsz	??_main,f
   551  07EA  2FE9               	goto	u227
   552  07EB  0BF9               	decfsz	??_main+1,f
   553  07EC  2FE9               	goto	u227
   554  07ED  0BFA               	decfsz	??_main+2,f
   555  07EE  2FE9               	goto	u227
   556  07EF  2F97               	goto	l803
   557  07F0                     __end_of_main:	
   558                           
   559                           	psect	text1
   560  06B5                     __ptext1:	
   561 ;; *************** function ___bmul *****************
   562 ;; Defined at:
   563 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul8.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  multiplier      1    wreg     unsigned char 
   566 ;;  multiplicand    1    0[COMMON] unsigned char 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  multiplier      1    3[COMMON] unsigned char 
   569 ;;  product         1    2[COMMON] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      unsigned char 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         1       0       0       0       0
   580 ;;      Locals:         2       0       0       0       0
   581 ;;      Temps:          1       0       0       0       0
   582 ;;      Totals:         4       0       0       0       0
   583 ;;Total ram usage:        4 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function ___bmul
   594  06B5                     ___bmul:	
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   598                           ;___bmul@multiplier stored from wreg
   599  06B5  00F3               	movwf	___bmul@multiplier
   600  06B6  01F2               	clrf	___bmul@product
   601  06B7                     l721:	
   602  06B7  1C73               	btfss	___bmul@multiplier,0
   603  06B8  2EBD               	goto	l725
   604  06B9  0870               	movf	___bmul@multiplicand,w
   605  06BA  00F1               	movwf	??___bmul
   606  06BB  0871               	movf	??___bmul,w
   607  06BC  07F2               	addwf	___bmul@product,f
   608  06BD                     l725:	
   609  06BD  1003               	clrc
   610  06BE  0DF0               	rlf	___bmul@multiplicand,f
   611  06BF  1003               	clrc
   612  06C0  0CF3               	rrf	___bmul@multiplier,f
   613  06C1  0873               	movf	___bmul@multiplier,w
   614  06C2  1D03               	btfss	3,2
   615  06C3  2EB7               	goto	l721
   616  06C4  0872               	movf	___bmul@product,w
   617  06C5  0008               	return
   618  06C6                     __end_of___bmul:	
   619                           
   620                           	psect	text2
   621  06F0                     __ptext2:	
   622 ;; *************** function _SelectB *****************
   623 ;; Defined at:
   624 ;;		line 75 in file "prologue.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  result          1    7[COMMON] unsigned char 
   629 ;;  oldLEDs         1    6[COMMON] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      unsigned char 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0, pclath, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         2       0       0       0       0
   641 ;;      Temps:          3       0       0       0       0
   642 ;;      Totals:         5       0       0       0       0
   643 ;;Total ram usage:        5 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    1
   646 ;; This function calls:
   647 ;;		_ReadADC
   648 ;;		_ReadSw
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _SelectB
   656  06F0                     _SelectB:	
   657                           
   658                           ;prologue.c: 76: unsigned char oldLEDs, result;
   659                           ;prologue.c: 77: oldLEDs=PORTD;
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _SelectB: [wreg+status,2+status,0+pclath+cstack]
   663  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   664  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   665  06F2  0808               	movf	8,w	;volatile
   666  06F3  00F3               	movwf	??_SelectB
   667  06F4  0873               	movf	??_SelectB,w
   668  06F5  00F6               	movwf	SelectB@oldLEDs
   669                           
   670                           ;prologue.c: 78: PORTD=0b00010000;
   671  06F6  3010               	movlw	16
   672  06F7  0088               	movwf	8	;volatile
   673  06F8                     l699:	
   674                           ;prologue.c: 80: do {
   675                           
   676                           
   677                           ;prologue.c: 81: result = ReadADC();
   678  06F8  120A  118A  269E  120A  118A  	fcall	_ReadADC
   679  06FD  00F3               	movwf	??_SelectB
   680  06FE  0873               	movf	??_SelectB,w
   681  06FF  00F7               	movwf	SelectB@result
   682                           
   683                           ;prologue.c: 82: result >>= 6;
   684  0700  0EF7               	swapf	SelectB@result,f
   685  0701  0CF7               	rrf	SelectB@result,f
   686  0702  0CF7               	rrf	SelectB@result,f
   687  0703  3003               	movlw	3
   688  0704  05F7               	andwf	SelectB@result,f
   689                           
   690                           ;prologue.c: 83: PORTD = result | 0b00010000 | (oldLEDs & 0b11000000);
   691  0705  0876               	movf	SelectB@oldLEDs,w
   692  0706  39C0               	andlw	192
   693  0707  0477               	iorwf	SelectB@result,w
   694  0708  3810               	iorlw	16
   695  0709  1283               	bcf	3,5	;RP0=0, select bank0
   696  070A  1303               	bcf	3,6	;RP1=0, select bank0
   697  070B  0088               	movwf	8	;volatile
   698                           
   699                           ;prologue.c: 84: } while( ReadSw() );
   700  070C  120A  118A  26D7  120A  118A  	fcall	_ReadSw
   701  0711  3A00               	xorlw	0
   702  0712  1D03               	skipz
   703  0713  2EF8               	goto	l699
   704                           
   705                           ;prologue.c: 86: PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   706  0714  1283               	bcf	3,5	;RP0=0, select bank0
   707  0715  1303               	bcf	3,6	;RP1=0, select bank0
   708  0716  0188               	clrf	8	;volatile
   709  0717  3002               	movlw	2
   710  0718  00F5               	movwf	??_SelectB+2
   711  0719  3086               	movlw	134
   712  071A  00F4               	movwf	??_SelectB+1
   713  071B  3099               	movlw	153
   714  071C  00F3               	movwf	??_SelectB
   715  071D                     u237:	
   716  071D  0BF3               	decfsz	??_SelectB,f
   717  071E  2F1D               	goto	u237
   718  071F  0BF4               	decfsz	??_SelectB+1,f
   719  0720  2F1D               	goto	u237
   720  0721  0BF5               	decfsz	??_SelectB+2,f
   721  0722  2F1D               	goto	u237
   722                           
   723                           ;prologue.c: 87: PORTD = result; _delay((unsigned long)((400)*(4000000/4000.0)));
   724  0723  0877               	movf	SelectB@result,w
   725  0724  1283               	bcf	3,5	;RP0=0, select bank0
   726  0725  1303               	bcf	3,6	;RP1=0, select bank0
   727  0726  0088               	movwf	8	;volatile
   728  0727  3003               	movlw	3
   729  0728  00F5               	movwf	??_SelectB+2
   730  0729  3008               	movlw	8
   731  072A  00F4               	movwf	??_SelectB+1
   732  072B  3077               	movlw	119
   733  072C  00F3               	movwf	??_SelectB
   734  072D                     u247:	
   735  072D  0BF3               	decfsz	??_SelectB,f
   736  072E  2F2D               	goto	u247
   737  072F  0BF4               	decfsz	??_SelectB+1,f
   738  0730  2F2D               	goto	u247
   739  0731  0BF5               	decfsz	??_SelectB+2,f
   740  0732  2F2D               	goto	u247
   741                           
   742                           ;prologue.c: 88: PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   743  0733  1283               	bcf	3,5	;RP0=0, select bank0
   744  0734  1303               	bcf	3,6	;RP1=0, select bank0
   745  0735  0188               	clrf	8	;volatile
   746  0736  3002               	movlw	2
   747  0737  00F5               	movwf	??_SelectB+2
   748  0738  3086               	movlw	134
   749  0739  00F4               	movwf	??_SelectB+1
   750  073A  3099               	movlw	153
   751  073B  00F3               	movwf	??_SelectB
   752  073C                     u257:	
   753  073C  0BF3               	decfsz	??_SelectB,f
   754  073D  2F3C               	goto	u257
   755  073E  0BF4               	decfsz	??_SelectB+1,f
   756  073F  2F3C               	goto	u257
   757  0740  0BF5               	decfsz	??_SelectB+2,f
   758  0741  2F3C               	goto	u257
   759                           
   760                           ;prologue.c: 90: PORTD=oldLEDs;
   761  0742  0876               	movf	SelectB@oldLEDs,w
   762  0743  1283               	bcf	3,5	;RP0=0, select bank0
   763  0744  1303               	bcf	3,6	;RP1=0, select bank0
   764  0745  0088               	movwf	8	;volatile
   765                           
   766                           ;prologue.c: 91: return result;
   767  0746  0877               	movf	SelectB@result,w
   768  0747  0008               	return
   769  0748                     __end_of_SelectB:	
   770                           
   771                           	psect	text3
   772  06D7                     __ptext3:	
   773 ;; *************** function _ReadSw *****************
   774 ;; Defined at:
   775 ;;		line 41 in file "prologue.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  tmp             1    2[COMMON] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, status,2
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0
   791 ;;      Temps:          2       0       0       0       0
   792 ;;      Totals:         3       0       0       0       0
   793 ;;Total ram usage:        3 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_SelectB
   799 ;;		_main
   800 ;;		_Select4
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _ReadSw
   806  06D7                     _ReadSw:	
   807  06D7                     l43:	
   808                           ;incstack = 0
   809                           ; Regs used in _ReadSw: [wreg+status,2]
   810                           ;prologue.c: 42: unsigned char tmp;
   811                           ;prologue.c: 43: do {
   812                           
   813                           
   814                           ;prologue.c: 44: tmp = PORTB & 0b00000001;
   815  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   816  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   817  06D9  0806               	movf	6,w	;volatile
   818  06DA  3901               	andlw	1
   819  06DB  00F0               	movwf	??_ReadSw
   820  06DC  0870               	movf	??_ReadSw,w
   821  06DD  00F2               	movwf	ReadSw@tmp
   822                           
   823                           ;prologue.c: 45: _delay((unsigned long)((20)*(4000000/4000.0)));
   824  06DE  301A               	movlw	26
   825  06DF  00F1               	movwf	??_ReadSw+1
   826  06E0  30F8               	movlw	248
   827  06E1  00F0               	movwf	??_ReadSw
   828  06E2                     u267:	
   829  06E2  0BF0               	decfsz	??_ReadSw,f
   830  06E3  2EE2               	goto	u267
   831  06E4  0BF1               	decfsz	??_ReadSw+1,f
   832  06E5  2EE2               	goto	u267
   833  06E6  0000               	nop
   834                           
   835                           ;prologue.c: 46: } while( tmp != (PORTB & 0b00000001) );
   836  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   837  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   838  06E9  0806               	movf	6,w	;volatile
   839  06EA  3901               	andlw	1
   840  06EB  0672               	xorwf	ReadSw@tmp,w
   841  06EC  1D03               	skipz
   842  06ED  2ED7               	goto	l43
   843                           
   844                           ;prologue.c: 47: return tmp;
   845  06EE  0872               	movf	ReadSw@tmp,w
   846  06EF  0008               	return
   847  06F0                     __end_of_ReadSw:	
   848                           
   849                           	psect	text4
   850  069E                     __ptext4:	
   851 ;; *************** function _ReadADC *****************
   852 ;; Defined at:
   853 ;;		line 34 in file "prologue.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      unsigned char 
   860 ;; Registers used:
   861 ;;		wreg
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_SelectB
   877 ;;		_Select4
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _ReadADC
   883  069E                     _ReadADC:	
   884                           
   885                           ;prologue.c: 35: ADCON0 |= 0b00000010;
   886                           
   887                           ;incstack = 0
   888                           ; Regs used in _ReadADC: [wreg]
   889  069E  1283               	bcf	3,5	;RP0=0, select bank0
   890  069F  1303               	bcf	3,6	;RP1=0, select bank0
   891  06A0  149F               	bsf	31,1	;volatile
   892  06A1                     l37:	
   893                           ;prologue.c: 36: while ( (ADCON0 & 0b00000010) );
   894                           
   895  06A1  189F               	btfsc	31,1	;volatile
   896  06A2  2EA1               	goto	l37
   897                           
   898                           ;prologue.c: 37: return ADRESH;
   899  06A3  081E               	movf	30,w	;volatile
   900  06A4  0008               	return
   901  06A5                     __end_of_ReadADC:	
   902  007E                     btemp	set	126	;btemp
   903  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     19      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SelectB
    _SelectB->_ReadSw

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0     418
                                              8 COMMON     4     4      0
                                              0 BANK0     19    19      0
                             _ReadSw
                            _SelectB
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     145
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SelectB                                              5     5      0     158
                                              3 COMMON     5     5      0
                            _ReadADC
                             _ReadSw
 ---------------------------------------------------------------------------------
 (2) _ReadSw                                               3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadSw
   _SelectB
     _ReadADC
     _ReadSw
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Oct 26 23:42:11 2017

                       pc 0002            ___bmul@product 0072                        l43 06D7  
                      l37 06A1                        fsr 0004                       l721 06B7  
                     l803 0797                       l725 06BD                       l821 07DB  
                     l817 07C7                       l699 06F8                       u207 0791  
                     u160 0750                       u217 07D5                       u227 07E9  
                     u237 071D                       u247 072D                       u257 073C  
                     u267 06E2                       u197 0782                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000             __CFG_DEBUG$ON 0000  
                    _main 0748                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000         ___bmul@multiplier 0073           __end_of_ReadADC 06A5  
         __end_of_SelectB 0748                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089             __CFG_PWRTE$ON 0000  
           SelectB@result 0077            __CFG_FCMEN$OFF 0000                     main@A 0031  
                   main@B 0032            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07F0  
            __end_of_main 07F0                    ??_main 0078                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ANSELH 0189  
          SelectB@oldLEDs 0076                 ??_ReadADC 0070                    _ReadSw 06D7  
               ??_SelectB 0073                    ___bmul 06B5   __end_of__initialization 07FC  
     ___bmul@multiplicand 0070            __pcstackCOMMON 0070              __pidataBANK0 06A5  
                 ?_ReadSw 0070                __pmaintext 0748                   ?___bmul 0070  
                 _ReadADC 069E                   _SelectB 06F0           __size_of_ReadSw 0019  
         __size_of___bmul 0011                   __ptext1 06B5                   __ptext2 06F0  
                 __ptext3 06D7                   __ptext4 069E                   main@LUT 0020  
                 main@TMP 0030      end_of_initialization 07FC                 ReadSw@tmp 0072  
          __end_of_ReadSw 06F0            __end_of___bmul 06C6       start_initialization 07F0  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_ReadSw 0070                  ??___bmul 0071  
              init_fetch0 06C6               __pdataBANK0 0033                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_ReadADC 0070                  ?_SelectB 0070  
               main@F1672 0033          __size_of_ReadADC 0007          __size_of_SelectB 0058  
       __CFG_BOR4V$BOR21V 0000             __size_of_main 00A8                  init_ram0 06CA  
              _OPTION_REG 0081  
