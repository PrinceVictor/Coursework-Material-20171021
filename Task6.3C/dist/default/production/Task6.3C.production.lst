

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 17 02:58:39 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.44
    16                           ; Generated 14/09/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127                           
   128                           	psect	idataCOMMON
   129  00AE                     __pidataCOMMON:	
   130                           
   131                           ;initializer for _i
   132  00AE  34FF               	retlw	255
   133  00AF  34FF               	retlw	255
   134  000B                     _INTCON	set	11
   135  0009                     _PORTE	set	9
   136  0007                     _PORTC	set	7
   137  0005                     _PORTA	set	5
   138  0008                     _PORTD	set	8
   139  0006                     _PORTB	set	6
   140  001E                     _ADRESH	set	30
   141  001F                     _ADCON0	set	31
   142  0066                     _ADIF	set	102
   143  006D                     _C1IF	set	109
   144  008C                     _PIE1	set	140
   145  0097                     _VRCON	set	151
   146  008D                     _PIE2	set	141
   147  009F                     _ADCON1	set	159
   148  0081                     _OPTION_REG	set	129
   149  0089                     _TRISE	set	137
   150  0088                     _TRISD	set	136
   151  0087                     _TRISC	set	135
   152  0086                     _TRISB	set	134
   153  0085                     _TRISA	set	133
   154  008D                     _PIE2bits	set	141
   155  0107                     _CM1CON0	set	263
   156  083E                     _C1OUT	set	2110
   157  0188                     _ANSEL	set	392
   158  0189                     _ANSELH	set	393
   159                           
   160                           ; #config settings
   161  0000                     
   162                           	psect	cinit
   163  0015                     start_initialization:	
   164  0015                     __initialization:	
   165                           
   166                           ; Initialize objects allocated to COMMON
   167  0015  120A  118A  20AE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   168  001A  00F7               	movwf	__pdataCOMMON& (0+127)
   169  001B  120A  118A  20AF   	fcall	__pidataCOMMON+1	;fetch initializer
   170  001E  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   171  001F                     end_of_initialization:	
   172                           ;End of C runtime variable initialization code
   173                           
   174  001F                     __end_of__initialization:	
   175  001F  0183               	clrf	3
   176  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   177                           
   178                           	psect	dataCOMMON
   179  0077                     __pdataCOMMON:	
   180  0077                     _i:	
   181  0077                     	ds	2
   182                           
   183                           	psect	cstackCOMMON
   184  0070                     __pcstackCOMMON:	
   185  0070                     ?_Comparator_Init:	
   186  0070                     ?_ADC_Init:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0070                     ?_ISR:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ??_ISR:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_main:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 2 bytes @ 0x0
   200  0070                     	ds	4
   201  0074                     ??_Comparator_Init:	
   202  0074                     ??_ADC_Init:	
   203                           ; 1 bytes @ 0x4
   204                           
   205  0074                     ??_main:	
   206                           ; 1 bytes @ 0x4
   207                           
   208                           
   209                           ; 1 bytes @ 0x4
   210  0074                     	ds	3
   211                           
   212                           	psect	maintext
   213  0023                     __pmaintext:	
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 27 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  2   97[None  ] int 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, pclath, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          3       0       0       0       0
   236 ;;      Totals:         3       0       0       0       0
   237 ;;Total ram usage:        3 bytes
   238 ;; Hardware stack levels required when called:    2
   239 ;; This function calls:
   240 ;;		_ADC_Init
   241 ;;		_Comparator_Init
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _main
   249  0023                     _main:	
   250                           
   251                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   252                           
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   255  0023  1283               	bcf	3,5	;RP0=0, select bank0
   256  0024  1303               	bcf	3,6	;RP1=0, select bank0
   257  0025  0185               	clrf	5	;volatile
   258  0026  0186               	clrf	6	;volatile
   259  0027  0187               	clrf	7	;volatile
   260  0028  0188               	clrf	8	;volatile
   261  0029  0189               	clrf	9	;volatile
   262                           
   263                           ;init.c: 7: ANSELH= 0;
   264  002A  1683               	bsf	3,5	;RP0=1, select bank3
   265  002B  1703               	bsf	3,6	;RP1=1, select bank3
   266  002C  0189               	clrf	9	;volatile
   267                           
   268                           ;init.c: 8: ANSEL = 0b00000001;
   269  002D  3001               	movlw	1
   270  002E  0088               	movwf	8	;volatile
   271                           
   272                           ;init.c: 9: TRISA = 0b00000001;
   273  002F  3001               	movlw	1
   274  0030  1683               	bsf	3,5	;RP0=1, select bank1
   275  0031  1303               	bcf	3,6	;RP1=0, select bank1
   276  0032  0085               	movwf	5	;volatile
   277                           
   278                           ;init.c: 12: TRISB = 0b00000001;
   279  0033  3001               	movlw	1
   280  0034  0086               	movwf	6	;volatile
   281                           
   282                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   283  0035  0187               	clrf	7	;volatile
   284  0036  0188               	clrf	8	;volatile
   285  0037  30F8               	movlw	248
   286  0038  0089               	movwf	9	;volatile
   287                           
   288                           ;init.c: 18: OPTION_REG = 0b00001000;
   289  0039  3008               	movlw	8
   290  003A  0081               	movwf	1	;volatile
   291                           
   292                           ;init.c: 21: ADCON1 = 0;
   293  003B  019F               	clrf	31	;volatile
   294                           
   295                           ;init.c: 22: ADCON0 = 0b01000001;
   296  003C  3041               	movlw	65
   297  003D  1283               	bcf	3,5	;RP0=0, select bank0
   298  003E  1303               	bcf	3,6	;RP1=0, select bank0
   299  003F  009F               	movwf	31	;volatile
   300                           
   301                           ;init.c: 25: PORTD = 0xFF;
   302  0040  30FF               	movlw	255
   303  0041  0088               	movwf	8	;volatile
   304                           
   305                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   306  0042  3002               	movlw	2
   307  0043  00F6               	movwf	??_main+2
   308  0044  3086               	movlw	134
   309  0045  00F5               	movwf	??_main+1
   310  0046  3099               	movlw	153
   311  0047  00F4               	movwf	??_main
   312  0048                     u87:	
   313  0048  0BF4               	decfsz	??_main,f
   314  0049  2848               	goto	u87
   315  004A  0BF5               	decfsz	??_main+1,f
   316  004B  2848               	goto	u87
   317  004C  0BF6               	decfsz	??_main+2,f
   318  004D  2848               	goto	u87
   319                           
   320                           ;init.c: 27: PORTD = 0;
   321  004E  1283               	bcf	3,5	;RP0=0, select bank0
   322  004F  1303               	bcf	3,6	;RP1=0, select bank0
   323  0050  0188               	clrf	8	;volatile
   324                           
   325                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   326  0051  3002               	movlw	2
   327  0052  00F6               	movwf	??_main+2
   328  0053  3086               	movlw	134
   329  0054  00F5               	movwf	??_main+1
   330  0055  3099               	movlw	153
   331  0056  00F4               	movwf	??_main
   332  0057                     u97:	
   333  0057  0BF4               	decfsz	??_main,f
   334  0058  2857               	goto	u97
   335  0059  0BF5               	decfsz	??_main+1,f
   336  005A  2857               	goto	u97
   337  005B  0BF6               	decfsz	??_main+2,f
   338  005C  2857               	goto	u97
   339                           
   340                           ;main.c: 34: Comparator_Init();
   341  005D  120A  118A  2095  120A  118A  	fcall	_Comparator_Init
   342                           
   343                           ;main.c: 35: ADC_Init();
   344  0062  120A  118A  20A2  120A  118A  	fcall	_ADC_Init
   345  0067                     l98:	
   346                           ;main.c: 39: while (1) {
   347                           
   348  0067  2867               	goto	l98
   349  0068                     __end_of_main:	
   350                           
   351                           	psect	text1
   352  0095                     __ptext1:	
   353 ;; *************** function _Comparator_Init *****************
   354 ;; Defined at:
   355 ;;		line 53 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _Comparator_Init
   385  0095                     _Comparator_Init:	
   386                           
   387                           ;main.c: 54: INTCON = 0b11000000;
   388                           
   389                           ;incstack = 0
   390                           ; Regs used in _Comparator_Init: [wreg]
   391  0095  30C0               	movlw	192
   392  0096  008B               	movwf	11	;volatile
   393                           
   394                           ;main.c: 55: PIE2 = 0b00100000;
   395  0097  3020               	movlw	32
   396  0098  1683               	bsf	3,5	;RP0=1, select bank1
   397  0099  1303               	bcf	3,6	;RP1=0, select bank1
   398  009A  008D               	movwf	13	;volatile
   399                           
   400                           ;main.c: 56: VRCON = 0b10100010;
   401  009B  30A2               	movlw	162
   402  009C  0097               	movwf	23	;volatile
   403                           
   404                           ;main.c: 57: CM1CON0 = 0b10000100;
   405  009D  3084               	movlw	132
   406  009E  1283               	bcf	3,5	;RP0=0, select bank2
   407  009F  1703               	bsf	3,6	;RP1=1, select bank2
   408  00A0  0087               	movwf	7	;volatile
   409  00A1  0008               	return
   410  00A2                     __end_of_Comparator_Init:	
   411                           
   412                           	psect	text2
   413  00A2                     __ptext2:	
   414 ;; *************** function _ADC_Init *****************
   415 ;; Defined at:
   416 ;;		line 63 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _ADC_Init
   446  00A2                     _ADC_Init:	
   447                           
   448                           ;main.c: 64: ADCON1 = 0b00000000;
   449                           
   450                           ;incstack = 0
   451                           ; Regs used in _ADC_Init: [wreg+status,2]
   452  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   453  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   454  00A4  019F               	clrf	31	;volatile
   455                           
   456                           ;main.c: 65: INTCON = 0b11000000;
   457  00A5  30C0               	movlw	192
   458  00A6  008B               	movwf	11	;volatile
   459                           
   460                           ;main.c: 66: PIE1 = 0b01000000;
   461  00A7  3040               	movlw	64
   462  00A8  008C               	movwf	12	;volatile
   463                           
   464                           ;main.c: 67: ADCON0 = 0b01000000;
   465  00A9  3040               	movlw	64
   466  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   467  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   468  00AC  009F               	movwf	31	;volatile
   469  00AD  0008               	return
   470  00AE                     __end_of_ADC_Init:	
   471                           
   472                           	psect	text3
   473  0068                     __ptext3:	
   474 ;; *************** function _ISR *****************
   475 ;; Defined at:
   476 ;;		line 7 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          4       0       0       0       0
   493 ;;      Totals:         4       0       0       0       0
   494 ;;Total ram usage:        4 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		Interrupt level 1
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _ISR
   505  0068                     _ISR:	
   506                           
   507                           ;main.c: 8: if(C1IF){
   508  0068  1E8D               	btfss	13,5	;volatile
   509  0069  287B               	goto	i1l651
   510                           
   511                           ;main.c: 9: C1IF = 0;
   512  006A  128D               	bcf	13,5	;volatile
   513                           
   514                           ;main.c: 10: PORTD = (C1OUT << 6);
   515  006B  3000               	movlw	0
   516  006C  1283               	bcf	3,5	;RP0=0, select bank2
   517  006D  1703               	bsf	3,6	;RP1=1, select bank2
   518  006E  1B07               	btfsc	7,6	;volatile
   519  006F  3040               	movlw	64
   520  0070  1283               	bcf	3,5	;RP0=0, select bank0
   521  0071  1303               	bcf	3,6	;RP1=0, select bank0
   522  0072  0088               	movwf	8	;volatile
   523                           
   524                           ;main.c: 11: ADCON0 = 0b00000011;
   525  0073  3003               	movlw	3
   526  0074  009F               	movwf	31	;volatile
   527                           
   528                           ;main.c: 12: i++;
   529  0075  3001               	movlw	1
   530  0076  07F7               	addwf	_i,f
   531  0077  1803               	skipnc
   532  0078  0AF8               	incf	_i+1,f
   533  0079  3000               	movlw	0
   534  007A  07F8               	addwf	_i+1,f
   535  007B                     i1l651:	
   536                           
   537                           ;main.c: 13: }
   538                           ;main.c: 15: if(ADIF)
   539  007B  1F0C               	btfss	12,6	;volatile
   540  007C  288A               	goto	i1l93
   541                           
   542                           ;main.c: 16: {
   543                           ;main.c: 17: ADIF = 0;
   544  007D  130C               	bcf	12,6	;volatile
   545                           
   546                           ;main.c: 18: if(i) {
   547  007E  0877               	movf	_i,w
   548  007F  0478               	iorwf	_i+1,w
   549  0080  1903               	btfsc	3,2
   550  0081  2887               	goto	i1l92
   551                           
   552                           ;main.c: 19: PORTD = ADRESH ;
   553  0082  081E               	movf	30,w	;volatile
   554  0083  0088               	movwf	8	;volatile
   555                           
   556                           ;main.c: 20: PIE2bits.C1IE = 0;}
   557  0084  1683               	bsf	3,5	;RP0=1, select bank1
   558  0085  1303               	bcf	3,6	;RP1=0, select bank1
   559  0086  128D               	bcf	13,5	;volatile
   560  0087                     i1l92:	
   561                           
   562                           ;main.c: 22: ADCON0 = 0b00000010;
   563  0087  3002               	movlw	2
   564  0088  1283               	bcf	3,5	;RP0=0, select bank0
   565  0089  009F               	movwf	31	;volatile
   566  008A                     i1l93:	
   567  008A  0873               	movf	??_ISR+3,w
   568  008B  00FF               	movwf	127
   569  008C  0872               	movf	??_ISR+2,w
   570  008D  008A               	movwf	10
   571  008E  0871               	movf	??_ISR+1,w
   572  008F  0084               	movwf	4
   573  0090  0E70               	swapf	??_ISR^(0+-128),w
   574  0091  0083               	movwf	3
   575  0092  0EFE               	swapf	126,f
   576  0093  0E7E               	swapf	126,w
   577  0094  0009               	retfie
   578  0095                     __end_of_ISR:	
   579  007E                     btemp	set	126	;btemp
   580  007E                     wtemp0	set	126
   581                           
   582                           	psect	intentry
   583  0004                     __pintentry:	
   584                           ;incstack = 0
   585                           ; Regs used in _ISR: [wreg+status,2+status,0]
   586                           
   587  0004                     interrupt_function:	
   588  007E                     saved_w	set	btemp
   589  0004  00FE               	movwf	btemp
   590  0005  0E03               	swapf	3,w
   591  0006  00F0               	movwf	??_ISR
   592  0007  0804               	movf	4,w
   593  0008  00F1               	movwf	??_ISR+1
   594  0009  080A               	movf	10,w
   595  000A  00F2               	movwf	??_ISR+2
   596  000B  1283               	bcf	3,5	;RP0=0, select bank0
   597  000C  1303               	bcf	3,6	;RP1=0, select bank0
   598  000D  087F               	movf	btemp+1,w
   599  000E  00F3               	movwf	??_ISR+3
   600  000F  120A  118A  2868   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
                           _ADC_Init
                    _Comparator_Init
 ---------------------------------------------------------------------------------
 (1) _Comparator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Comparator_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       9      12        0.0%
ABS                  0      0       9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 17 02:58:39 2017

                       _i 0077                        l98 0067                        u87 0048  
                      u97 0057                       _ISR 0068                       fsr0 0004  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      _C1IF 006D  
                    _ADIF 0066             __CFG_DEBUG$ON 0000                      _PIE1 008C  
                    _PIE2 008D                      i1l92 0087                      i1l93 008A  
                    _main 0023                      btemp 007E         ??_Comparator_Init 0074  
        __end_of_ADC_Init 00AE                      start 0012             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     _C1OUT 083E                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l651 007B  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     _VRCON 0097             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 0068                    ??_main 0074                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ANSELH 0189  
                  _INTCON 000B              __pdataCOMMON 0077                 ?_ADC_Init 0070  
                  saved_w 007E   __end_of__initialization 001F            __pcstackCOMMON 0070  
              ??_ADC_Init 0074           _Comparator_Init 0095                __pmaintext 0023  
              __pintentry 0004                   _CM1CON0 0107   __end_of_Comparator_Init 00A2  
                 __ptext1 0095                   __ptext2 00A2                   __ptext3 0068  
            __size_of_ISR 002D      end_of_initialization 001F         __size_of_ADC_Init 000C  
           __pidataCOMMON 00AE          ?_Comparator_Init 0070       start_initialization 0015  
             __end_of_ISR 0095  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
                _ADC_Init 00A2         interrupt_function 0004                  _PIE2bits 008D  
       __CFG_BOR4V$BOR21V 0000             __size_of_main 0045  __size_of_Comparator_Init 000D  
                intlevel1 0000                _OPTION_REG 0081  
