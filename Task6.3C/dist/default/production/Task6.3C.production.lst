

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 17 01:13:16 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.44
    13                           ; Generated 14/09/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  000B                     _INTCON	set	11
   125  0009                     _PORTE	set	9
   126  0007                     _PORTC	set	7
   127  0005                     _PORTA	set	5
   128  0008                     _PORTD	set	8
   129  0006                     _PORTB	set	6
   130  001E                     _ADRESH	set	30
   131  001F                     _ADCON0	set	31
   132  006D                     _C1IF	set	109
   133  0097                     _VRCON	set	151
   134  008D                     _PIE2	set	141
   135  009F                     _ADCON1	set	159
   136  0081                     _OPTION_REG	set	129
   137  0089                     _TRISE	set	137
   138  0088                     _TRISD	set	136
   139  0087                     _TRISC	set	135
   140  0086                     _TRISB	set	134
   141  0085                     _TRISA	set	133
   142  0107                     _CM1CON0	set	263
   143  083E                     _C1OUT	set	2110
   144  0188                     _ANSEL	set	392
   145  0189                     _ANSELH	set	393
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  0015                     start_initialization:	
   151  0015                     __initialization:	
   152  0015                     end_of_initialization:	
   153                           ;End of C runtime variable initialization code
   154                           
   155  0015                     __end_of__initialization:	
   156  0015  0183               	clrf	3
   157  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   158                           
   159                           	psect	cstackCOMMON
   160  0070                     __pcstackCOMMON:	
   161  0070                     ?_Comparator_Init:	
   162  0070                     ?_ISR:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0070                     ??_ISR:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0070                     ?_main:	
   169                           ; 1 bytes @ 0x0
   170                           
   171                           
   172                           ; 2 bytes @ 0x0
   173  0070                     	ds	5
   174  0075                     ??_Comparator_Init:	
   175  0075                     ??_main:	
   176                           ; 1 bytes @ 0x5
   177                           
   178                           
   179                           ; 1 bytes @ 0x5
   180  0075                     	ds	3
   181                           
   182                           	psect	maintext
   183  0019                     __pmaintext:	
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 13 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  2   85[None  ] int 
   196 ;; Registers used:
   197 ;;		wreg, status,2, status,0, pclath, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : B00/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   203 ;;      Params:         0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0
   205 ;;      Temps:          3       0       0       0       0
   206 ;;      Totals:         3       0       0       0       0
   207 ;;Total ram usage:        3 bytes
   208 ;; Hardware stack levels required when called:    2
   209 ;; This function calls:
   210 ;;		_Comparator_Init
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           
   217                           ;psect for function _main
   218  0019                     _main:	
   219                           
   220                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   221                           
   222                           ;incstack = 0
   223                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   224  0019  1283               	bcf	3,5	;RP0=0, select bank0
   225  001A  1303               	bcf	3,6	;RP1=0, select bank0
   226  001B  0185               	clrf	5	;volatile
   227  001C  0186               	clrf	6	;volatile
   228  001D  0187               	clrf	7	;volatile
   229  001E  0188               	clrf	8	;volatile
   230  001F  0189               	clrf	9	;volatile
   231                           
   232                           ;init.c: 7: ANSELH= 0;
   233  0020  1683               	bsf	3,5	;RP0=1, select bank3
   234  0021  1703               	bsf	3,6	;RP1=1, select bank3
   235  0022  0189               	clrf	9	;volatile
   236                           
   237                           ;init.c: 8: ANSEL = 0b00000001;
   238  0023  3001               	movlw	1
   239  0024  0088               	movwf	8	;volatile
   240                           
   241                           ;init.c: 9: TRISA = 0b00000001;
   242  0025  3001               	movlw	1
   243  0026  1683               	bsf	3,5	;RP0=1, select bank1
   244  0027  1303               	bcf	3,6	;RP1=0, select bank1
   245  0028  0085               	movwf	5	;volatile
   246                           
   247                           ;init.c: 12: TRISB = 0b00000001;
   248  0029  3001               	movlw	1
   249  002A  0086               	movwf	6	;volatile
   250                           
   251                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   252  002B  0187               	clrf	7	;volatile
   253  002C  0188               	clrf	8	;volatile
   254  002D  30F8               	movlw	248
   255  002E  0089               	movwf	9	;volatile
   256                           
   257                           ;init.c: 18: OPTION_REG = 0b00001000;
   258  002F  3008               	movlw	8
   259  0030  0081               	movwf	1	;volatile
   260                           
   261                           ;init.c: 21: ADCON1 = 0;
   262  0031  019F               	clrf	31	;volatile
   263                           
   264                           ;init.c: 22: ADCON0 = 0b01000001;
   265  0032  3041               	movlw	65
   266  0033  1283               	bcf	3,5	;RP0=0, select bank0
   267  0034  1303               	bcf	3,6	;RP1=0, select bank0
   268  0035  009F               	movwf	31	;volatile
   269                           
   270                           ;init.c: 25: PORTD = 0xFF;
   271  0036  30FF               	movlw	255
   272  0037  0088               	movwf	8	;volatile
   273                           
   274                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   275  0038  3002               	movlw	2
   276  0039  00F7               	movwf	??_main+2
   277  003A  3086               	movlw	134
   278  003B  00F6               	movwf	??_main+1
   279  003C  3099               	movlw	153
   280  003D  00F5               	movwf	??_main
   281  003E                     u67:	
   282  003E  0BF5               	decfsz	??_main,f
   283  003F  283E               	goto	u67
   284  0040  0BF6               	decfsz	??_main+1,f
   285  0041  283E               	goto	u67
   286  0042  0BF7               	decfsz	??_main+2,f
   287  0043  283E               	goto	u67
   288                           
   289                           ;init.c: 27: PORTD = 0;
   290  0044  1283               	bcf	3,5	;RP0=0, select bank0
   291  0045  1303               	bcf	3,6	;RP1=0, select bank0
   292  0046  0188               	clrf	8	;volatile
   293                           
   294                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   295  0047  3002               	movlw	2
   296  0048  00F7               	movwf	??_main+2
   297  0049  3086               	movlw	134
   298  004A  00F6               	movwf	??_main+1
   299  004B  3099               	movlw	153
   300  004C  00F5               	movwf	??_main
   301  004D                     u77:	
   302  004D  0BF5               	decfsz	??_main,f
   303  004E  284D               	goto	u77
   304  004F  0BF6               	decfsz	??_main+1,f
   305  0050  284D               	goto	u77
   306  0051  0BF7               	decfsz	??_main+2,f
   307  0052  284D               	goto	u77
   308                           
   309                           ;main.c: 20: Comparator_Init();
   310  0053  120A  118A  2071  120A  118A  	fcall	_Comparator_Init
   311  0058                     l86:	
   312                           ;main.c: 24: while (1) {
   313                           
   314  0058  2858               	goto	l86
   315  0059                     __end_of_main:	
   316                           
   317                           	psect	text1
   318  0071                     __ptext1:	
   319 ;; *************** function _Comparator_Init *****************
   320 ;; Defined at:
   321 ;;		line 38 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0
   338 ;;      Totals:         0       0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; Hardware stack levels required when called:    1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           
   350                           ;psect for function _Comparator_Init
   351  0071                     _Comparator_Init:	
   352                           
   353                           ;main.c: 39: INTCON = 0b11000000;
   354                           
   355                           ;incstack = 0
   356                           ; Regs used in _Comparator_Init: [wreg]
   357  0071  30C0               	movlw	192
   358  0072  008B               	movwf	11	;volatile
   359                           
   360                           ;main.c: 40: PIE2 = 0b00100000;
   361  0073  3020               	movlw	32
   362  0074  1683               	bsf	3,5	;RP0=1, select bank1
   363  0075  1303               	bcf	3,6	;RP1=0, select bank1
   364  0076  008D               	movwf	13	;volatile
   365                           
   366                           ;main.c: 41: VRCON = 0b10100010;
   367  0077  30A2               	movlw	162
   368  0078  0097               	movwf	23	;volatile
   369                           
   370                           ;main.c: 42: CM1CON0 = 0b11010100;
   371  0079  30D4               	movlw	212
   372  007A  1283               	bcf	3,5	;RP0=0, select bank2
   373  007B  1703               	bsf	3,6	;RP1=1, select bank2
   374  007C  0087               	movwf	7	;volatile
   375  007D  0008               	return
   376  007E                     __end_of_Comparator_Init:	
   377                           
   378                           	psect	text2
   379  0059                     __ptext2:	
   380 ;; *************** function _ISR *****************
   381 ;; Defined at:
   382 ;;		line 6 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          5       0       0       0       0
   399 ;;      Totals:         5       0       0       0       0
   400 ;;Total ram usage:        5 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		Interrupt level 1
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _ISR
   411  0059                     _ISR:	
   412                           
   413                           ;main.c: 7: if(C1IF){
   414  0059  1E8D               	btfss	13,5	;volatile
   415  005A  2866               	goto	i1l81
   416                           
   417                           ;main.c: 8: C1IF = 0;
   418  005B  128D               	bcf	13,5	;volatile
   419                           
   420                           ;main.c: 9: PORTD |= (C1OUT << 6);
   421  005C  3000               	movlw	0
   422  005D  1283               	bcf	3,5	;RP0=0, select bank2
   423  005E  1703               	bsf	3,6	;RP1=1, select bank2
   424  005F  1B07               	btfsc	7,6	;volatile
   425  0060  3040               	movlw	64
   426  0061  00F0               	movwf	??_ISR
   427  0062  0870               	movf	??_ISR,w
   428  0063  1283               	bcf	3,5	;RP0=0, select bank0
   429  0064  1303               	bcf	3,6	;RP1=0, select bank0
   430  0065  0488               	iorwf	8,f	;volatile
   431  0066                     i1l81:	
   432  0066  0874               	movf	??_ISR+4,w
   433  0067  00FF               	movwf	127
   434  0068  0873               	movf	??_ISR+3,w
   435  0069  008A               	movwf	10
   436  006A  0872               	movf	??_ISR+2,w
   437  006B  0084               	movwf	4
   438  006C  0E71               	swapf	(??_ISR+1)^(0+-128),w
   439  006D  0083               	movwf	3
   440  006E  0EFE               	swapf	126,f
   441  006F  0E7E               	swapf	126,w
   442  0070  0009               	retfie
   443  0071                     __end_of_ISR:	
   444  007E                     btemp	set	126	;btemp
   445  007E                     wtemp0	set	126
   446                           
   447                           	psect	intentry
   448  0004                     __pintentry:	
   449                           ;incstack = 0
   450                           ; Regs used in _ISR: [wreg+status,2+status,0]
   451                           
   452  0004                     interrupt_function:	
   453  007E                     saved_w	set	btemp
   454  0004  00FE               	movwf	btemp
   455  0005  0E03               	swapf	3,w
   456  0006  00F1               	movwf	??_ISR+1
   457  0007  0804               	movf	4,w
   458  0008  00F2               	movwf	??_ISR+2
   459  0009  080A               	movf	10,w
   460  000A  00F3               	movwf	??_ISR+3
   461  000B  1283               	bcf	3,5	;RP0=0, select bank0
   462  000C  1303               	bcf	3,6	;RP1=0, select bank0
   463  000D  087F               	movf	btemp+1,w
   464  000E  00F4               	movwf	??_ISR+4
   465  000F  120A  118A  2859   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              5 COMMON     3     3      0
                    _Comparator_Init
 ---------------------------------------------------------------------------------
 (1) _Comparator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comparator_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 17 01:13:16 2017

                      l86 0058                        u67 003E                        u77 004D  
                     _ISR 0059                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _C1IF 006D             __CFG_DEBUG$ON 0000  
                    _PIE2 008D                      i1l81 0066                      _main 0019  
                    btemp 007E         ??_Comparator_Init 0075                      start 0012  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     _C1OUT 083E  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     _VRCON 0097             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 0059                    ??_main 0075                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ANSELH 0189  
                  _INTCON 000B                    saved_w 007E   __end_of__initialization 0015  
          __pcstackCOMMON 0070           _Comparator_Init 0071                __pmaintext 0019  
              __pintentry 0004                   _CM1CON0 0107   __end_of_Comparator_Init 007E  
                 __ptext1 0071                   __ptext2 0059              __size_of_ISR 0018  
    end_of_initialization 0015          ?_Comparator_Init 0070       start_initialization 0015  
             __end_of_ISR 0071  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
       interrupt_function 0004         __CFG_BOR4V$BOR21V 0000             __size_of_main 0040  
__size_of_Comparator_Init 000D                  intlevel1 0000                _OPTION_REG 0081  
