

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Nov 04 11:24:10 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.44
    17                           ; Generated 14/09/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128                           
   129                           	psect	idataBANK0
   130  06B9                     __pidataBANK0:	
   131                           
   132                           ;initializer for main@F1672
   133  06B9  3400               	retlw	0
   134  06BA  3401               	retlw	1
   135  06BB  3402               	retlw	2
   136  06BC  3403               	retlw	3
   137  06BD  3407               	retlw	7
   138  06BE  3407               	retlw	7
   139  06BF  3407               	retlw	7
   140  06C0  3407               	retlw	7
   141  06C1  340E               	retlw	14
   142  06C2  340F               	retlw	15
   143  06C3  340F               	retlw	15
   144  06C4  340F               	retlw	15
   145  06C5  3415               	retlw	21
   146  06C6  3415               	retlw	21
   147  06C7  3417               	retlw	23
   148  06C8  3417               	retlw	23
   149  0009                     _PORTE	set	9
   150  0007                     _PORTC	set	7
   151  0005                     _PORTA	set	5
   152  0008                     _PORTD	set	8
   153  0006                     _PORTB	set	6
   154  001E                     _ADRESH	set	30
   155  001F                     _ADCON0	set	31
   156  009F                     _ADCON1	set	159
   157  0081                     _OPTION_REG	set	129
   158  0089                     _TRISE	set	137
   159  0088                     _TRISD	set	136
   160  0087                     _TRISC	set	135
   161  0086                     _TRISB	set	134
   162  0085                     _TRISA	set	133
   163  0188                     _ANSEL	set	392
   164  0189                     _ANSELH	set	393
   165                           
   166                           ; #config settings
   167  0000                     
   168                           	psect	cinit
   169  07F0                     start_initialization:	
   170  07F0                     __initialization:	
   171                           
   172                           ; Initialize objects allocated to BANK0
   173  07F0  1383               	bcf	3,7	;select IRP bank0
   174  07F1  3043               	movlw	low (__pdataBANK0+16)
   175  07F2  00FD               	movwf	btemp+-1
   176  07F3  3006               	movlw	high __pidataBANK0
   177  07F4  00FE               	movwf	btemp
   178  07F5  30B9               	movlw	low __pidataBANK0
   179  07F6  00FF               	movwf	btemp+1
   180  07F7  3033               	movlw	low __pdataBANK0
   181  07F8  0084               	movwf	4
   182  07F9  120A  118A  26CD   	fcall	init_ram0
   183  07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  07FC                     __end_of__initialization:	
   187  07FC  0183               	clrf	3
   188  07FD  120A  118A  2F4B   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	dataBANK0
   191  0033                     __pdataBANK0:	
   192  0033                     main@F1672:	
   193  0033                     	ds	16
   194                           
   195                           	psect	inittext
   196  06C9                     init_fetch0:	
   197                           ;	Called with low address in FSR and high address in W
   198                           
   199  06C9  087E               	movf	126,w
   200  06CA  008A               	movwf	10
   201  06CB  087F               	movf	127,w
   202  06CC  0082               	movwf	2
   203  06CD                     init_ram0:	
   204                           ;Called with:
   205                           ;	high address of idata address in btemp 
   206                           ;	low address of idata address in btemp+1 
   207                           ;	low address of data in FSR
   208                           ;	high address + 1 of data in btemp-1
   209                           
   210  06CD  26C9  120A  118A   	fcall	init_fetch0
   211  06D0  0080               	movwf	0
   212  06D1  0A84               	incf	4,f
   213  06D2  0804               	movf	4,w
   214  06D3  067D               	xorwf	125,w
   215  06D4  1903               	btfsc	3,2
   216  06D5  3400               	retlw	0
   217  06D6  0AFF               	incf	127,f
   218  06D7  1903               	btfsc	3,2
   219  06D8  0AFE               	incf	126,f
   220  06D9  2ECD               	goto	init_ram0
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:	
   224  0070                     ?_ReadADC:	
   225  0070                     ??_ReadADC:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_ReadSw:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ??_ReadSw:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_SelectB:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240                           
   241                           ; 2 bytes @ 0x0
   242  0070                     	ds	2
   243  0072                     ReadSw@tmp:	
   244                           
   245                           ; 1 bytes @ 0x2
   246  0072                     	ds	1
   247  0073                     ??_SelectB:	
   248                           
   249                           ; 1 bytes @ 0x3
   250  0073                     	ds	3
   251  0076                     SelectB@oldLEDs:	
   252                           
   253                           ; 1 bytes @ 0x6
   254  0076                     	ds	1
   255  0077                     SelectB@result:	
   256                           
   257                           ; 1 bytes @ 0x7
   258  0077                     	ds	1
   259  0078                     ??_main:	
   260                           
   261                           ; 1 bytes @ 0x8
   262  0078                     	ds	4
   263                           
   264                           	psect	cstackBANK0
   265  0020                     __pcstackBANK0:	
   266  0020                     main@LUT:	
   267                           
   268                           ; 16 bytes @ 0x0
   269  0020                     	ds	16
   270  0030                     main@TMP:	
   271                           
   272                           ; 1 bytes @ 0x10
   273  0030                     	ds	1
   274  0031                     main@B:	
   275                           
   276                           ; 1 bytes @ 0x11
   277  0031                     	ds	1
   278  0032                     main@A:	
   279                           
   280                           ; 1 bytes @ 0x12
   281  0032                     	ds	1
   282                           
   283                           	psect	maintext
   284  074B                     __pmaintext:	
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 5 in file "main.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  LUT            16    0[BANK0 ] unsigned char [16]
   295 ;;  A               1   18[BANK0 ] unsigned char 
   296 ;;  B               1   17[BANK0 ] unsigned char 
   297 ;;  TMP             1   16[BANK0 ] unsigned char 
   298 ;;  tmp1            1    0        unsigned char 
   299 ;;  tmp             1    0        unsigned char 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  2   65[None  ] int 
   302 ;; Registers used:
   303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   309 ;;      Params:         0       0       0       0       0
   310 ;;      Locals:         0      19       0       0       0
   311 ;;      Temps:          4       0       0       0       0
   312 ;;      Totals:         4      19       0       0       0
   313 ;;Total ram usage:       23 bytes
   314 ;; Hardware stack levels required when called:    2
   315 ;; This function calls:
   316 ;;		_ReadSw
   317 ;;		_SelectB
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           
   324                           ;psect for function _main
   325  074B                     _main:	
   326                           
   327                           ;main.c: 8: unsigned char tmp,tmp1,TMP;
   328                           ;main.c: 9: unsigned char A,B;
   329                           ;main.c: 10: unsigned char LUT[16] ={0,1,2,3,7,7,7,7,14,15,15,15,21,21,23,23};
   330                           
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   333  074B  3020               	movlw	main@LUT& (0+255)
   334  074C  0084               	movwf	4
   335  074D  3033               	movlw	low main@F1672
   336  074E  00F8               	movwf	??_main
   337  074F  0804               	movf	4,w
   338  0750  00F9               	movwf	??_main+1
   339  0751  3010               	movlw	16
   340  0752  00FA               	movwf	??_main+2
   341  0753                     u120:	
   342  0753  0878               	movf	??_main,w
   343  0754  0084               	movwf	4
   344  0755  1383               	bcf	3,7	;select IRP bank0
   345  0756  0800               	movf	0,w
   346  0757  00FB               	movwf	??_main+3
   347  0758  0AF8               	incf	??_main,f
   348  0759  0879               	movf	??_main+1,w
   349  075A  0084               	movwf	4
   350  075B  087B               	movf	??_main+3,w
   351  075C  0080               	movwf	0
   352  075D  0AF9               	incf	??_main+1,f
   353  075E  0BFA               	decfsz	??_main+2,f
   354  075F  2F53               	goto	u120
   355                           
   356                           ;init.c: 4: PORTA=0; PORTB=0; PORTC=0; PORTD=0; PORTE=0;
   357  0760  1283               	bcf	3,5	;RP0=0, select bank0
   358  0761  1303               	bcf	3,6	;RP1=0, select bank0
   359  0762  0185               	clrf	5	;volatile
   360  0763  0186               	clrf	6	;volatile
   361  0764  0187               	clrf	7	;volatile
   362  0765  0188               	clrf	8	;volatile
   363  0766  0189               	clrf	9	;volatile
   364                           
   365                           ;init.c: 7: ANSELH= 0;
   366  0767  1683               	bsf	3,5	;RP0=1, select bank3
   367  0768  1703               	bsf	3,6	;RP1=1, select bank3
   368  0769  0189               	clrf	9	;volatile
   369                           
   370                           ;init.c: 8: ANSEL = 0b00000001;
   371  076A  3001               	movlw	1
   372  076B  0088               	movwf	8	;volatile
   373                           
   374                           ;init.c: 9: TRISA = 0b00000001;
   375  076C  3001               	movlw	1
   376  076D  1683               	bsf	3,5	;RP0=1, select bank1
   377  076E  1303               	bcf	3,6	;RP1=0, select bank1
   378  076F  0085               	movwf	5	;volatile
   379                           
   380                           ;init.c: 12: TRISB = 0b00000001;
   381  0770  3001               	movlw	1
   382  0771  0086               	movwf	6	;volatile
   383                           
   384                           ;init.c: 15: TRISC=0; TRISD=0; TRISE=0b11111000;
   385  0772  0187               	clrf	7	;volatile
   386  0773  0188               	clrf	8	;volatile
   387  0774  30F8               	movlw	248
   388  0775  0089               	movwf	9	;volatile
   389                           
   390                           ;init.c: 18: OPTION_REG = 0b00001000;
   391  0776  3008               	movlw	8
   392  0777  0081               	movwf	1	;volatile
   393                           
   394                           ;init.c: 21: ADCON1 = 0;
   395  0778  019F               	clrf	31	;volatile
   396                           
   397                           ;init.c: 22: ADCON0 = 0b01000001;
   398  0779  3041               	movlw	65
   399  077A  1283               	bcf	3,5	;RP0=0, select bank0
   400  077B  1303               	bcf	3,6	;RP1=0, select bank0
   401  077C  009F               	movwf	31	;volatile
   402                           
   403                           ;init.c: 25: PORTD = 0xFF;
   404  077D  30FF               	movlw	255
   405  077E  0088               	movwf	8	;volatile
   406                           
   407                           ;init.c: 26: _delay((unsigned long)((300)*(4000000/4000.0)));
   408  077F  3002               	movlw	2
   409  0780  00FA               	movwf	??_main+2
   410  0781  3086               	movlw	134
   411  0782  00F9               	movwf	??_main+1
   412  0783  3099               	movlw	153
   413  0784  00F8               	movwf	??_main
   414  0785                     u157:	
   415  0785  0BF8               	decfsz	??_main,f
   416  0786  2F85               	goto	u157
   417  0787  0BF9               	decfsz	??_main+1,f
   418  0788  2F85               	goto	u157
   419  0789  0BFA               	decfsz	??_main+2,f
   420  078A  2F85               	goto	u157
   421                           
   422                           ;init.c: 27: PORTD = 0;
   423  078B  1283               	bcf	3,5	;RP0=0, select bank0
   424  078C  1303               	bcf	3,6	;RP1=0, select bank0
   425  078D  0188               	clrf	8	;volatile
   426                           
   427                           ;init.c: 28: _delay((unsigned long)((300)*(4000000/4000.0)));
   428  078E  3002               	movlw	2
   429  078F  00FA               	movwf	??_main+2
   430  0790  3086               	movlw	134
   431  0791  00F9               	movwf	??_main+1
   432  0792  3099               	movlw	153
   433  0793  00F8               	movwf	??_main
   434  0794                     u167:	
   435  0794  0BF8               	decfsz	??_main,f
   436  0795  2F94               	goto	u167
   437  0796  0BF9               	decfsz	??_main+1,f
   438  0797  2F94               	goto	u167
   439  0798  0BFA               	decfsz	??_main+2,f
   440  0799  2F94               	goto	u167
   441  079A                     l777:	
   442                           ;main.c: 18: while (1) {
   443                           
   444                           
   445                           ;main.c: 21: PORTD = 0b10000000;
   446  079A  3080               	movlw	128
   447  079B  1283               	bcf	3,5	;RP0=0, select bank0
   448  079C  1303               	bcf	3,6	;RP1=0, select bank0
   449  079D  0088               	movwf	8	;volatile
   450                           
   451                           ;main.c: 22: A = SelectB();
   452  079E  120A  118A  26F3  120A  118A  	fcall	_SelectB
   453  07A3  00F8               	movwf	??_main
   454  07A4  0878               	movf	??_main,w
   455  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   456  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   457  07A7  00B2               	movwf	main@A
   458                           
   459                           ;main.c: 25: PORTD = 0b01000000;
   460  07A8  3040               	movlw	64
   461  07A9  0088               	movwf	8	;volatile
   462                           
   463                           ;main.c: 26: B = SelectB();
   464  07AA  120A  118A  26F3  120A  118A  	fcall	_SelectB
   465  07AF  00F8               	movwf	??_main
   466  07B0  0878               	movf	??_main,w
   467  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   468  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   469  07B3  00B1               	movwf	main@B
   470                           
   471                           ;main.c: 29: A << = 2;
   472  07B4  1003               	clrc
   473  07B5  0DB2               	rlf	main@A,f
   474  07B6  1003               	clrc
   475  07B7  0DB2               	rlf	main@A,f
   476                           
   477                           ;main.c: 30: TMP = A|B;
   478  07B8  0832               	movf	main@A,w
   479  07B9  0431               	iorwf	main@B,w
   480  07BA  00F8               	movwf	??_main
   481  07BB  0878               	movf	??_main,w
   482  07BC  00B0               	movwf	main@TMP
   483                           
   484                           ;main.c: 31: PORTD = LUT[TMP];
   485  07BD  0830               	movf	main@TMP,w
   486  07BE  3E20               	addlw	(low (main@LUT| 0))& (0+255)
   487  07BF  0084               	movwf	4
   488  07C0  1383               	bcf	3,7	;select IRP bank0
   489  07C1  0800               	movf	0,w
   490  07C2  0088               	movwf	8	;volatile
   491                           
   492                           ;main.c: 32: PORTD |= 0b11000000;
   493  07C3  30C0               	movlw	192
   494  07C4  00F8               	movwf	??_main
   495  07C5  0878               	movf	??_main,w
   496  07C6  0488               	iorwf	8,f	;volatile
   497  07C7                     l793:	
   498                           ;main.c: 35: while(0 == ReadSw());
   499                           
   500  07C7  120A  118A  26DA  120A  118A  	fcall	_ReadSw
   501  07CC  3A00               	xorlw	0
   502  07CD  1903               	skipnz
   503  07CE  2FC7               	goto	l793
   504                           
   505                           ;main.c: 36: _delay((unsigned long)((400)*(4000000/4000.0)));
   506  07CF  3003               	movlw	3
   507  07D0  00FA               	movwf	??_main+2
   508  07D1  3008               	movlw	8
   509  07D2  00F9               	movwf	??_main+1
   510  07D3  3077               	movlw	119
   511  07D4  00F8               	movwf	??_main
   512  07D5                     u177:	
   513  07D5  0BF8               	decfsz	??_main,f
   514  07D6  2FD5               	goto	u177
   515  07D7  0BF9               	decfsz	??_main+1,f
   516  07D8  2FD5               	goto	u177
   517  07D9  0BFA               	decfsz	??_main+2,f
   518  07DA  2FD5               	goto	u177
   519  07DB                     l797:	
   520                           ;main.c: 37: while(1 == ReadSw());
   521                           
   522  07DB  120A  118A  26DA  120A  118A  	fcall	_ReadSw
   523  07E0  3A01               	xorlw	1
   524  07E1  1903               	skipnz
   525  07E2  2FDB               	goto	l797
   526                           
   527                           ;main.c: 38: _delay((unsigned long)((400)*(4000000/4000.0)));
   528  07E3  3003               	movlw	3
   529  07E4  00FA               	movwf	??_main+2
   530  07E5  3008               	movlw	8
   531  07E6  00F9               	movwf	??_main+1
   532  07E7  3077               	movlw	119
   533  07E8  00F8               	movwf	??_main
   534  07E9                     u187:	
   535  07E9  0BF8               	decfsz	??_main,f
   536  07EA  2FE9               	goto	u187
   537  07EB  0BF9               	decfsz	??_main+1,f
   538  07EC  2FE9               	goto	u187
   539  07ED  0BFA               	decfsz	??_main+2,f
   540  07EE  2FE9               	goto	u187
   541  07EF  2F9A               	goto	l777
   542  07F0                     __end_of_main:	
   543                           
   544                           	psect	text1
   545  06F3                     __ptext1:	
   546 ;; *************** function _SelectB *****************
   547 ;; Defined at:
   548 ;;		line 75 in file "prologue.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  result          1    7[COMMON] unsigned char 
   553 ;;  oldLEDs         1    6[COMMON] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      unsigned char 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         2       0       0       0       0
   565 ;;      Temps:          3       0       0       0       0
   566 ;;      Totals:         5       0       0       0       0
   567 ;;Total ram usage:        5 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    1
   570 ;; This function calls:
   571 ;;		_ReadADC
   572 ;;		_ReadSw
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _SelectB
   580  06F3                     _SelectB:	
   581                           
   582                           ;prologue.c: 76: unsigned char oldLEDs, result;
   583                           ;prologue.c: 77: oldLEDs=PORTD;
   584                           
   585                           ;incstack = 0
   586                           ; Regs used in _SelectB: [wreg+status,2+status,0+pclath+cstack]
   587  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   588  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   589  06F5  0808               	movf	8,w	;volatile
   590  06F6  00F3               	movwf	??_SelectB
   591  06F7  0873               	movf	??_SelectB,w
   592  06F8  00F6               	movwf	SelectB@oldLEDs
   593                           
   594                           ;prologue.c: 78: PORTD=0b00010000;
   595  06F9  3010               	movlw	16
   596  06FA  0088               	movwf	8	;volatile
   597  06FB                     l687:	
   598                           ;prologue.c: 80: do {
   599                           
   600                           
   601                           ;prologue.c: 81: result = ReadADC();
   602  06FB  120A  118A  26B2  120A  118A  	fcall	_ReadADC
   603  0700  00F3               	movwf	??_SelectB
   604  0701  0873               	movf	??_SelectB,w
   605  0702  00F7               	movwf	SelectB@result
   606                           
   607                           ;prologue.c: 82: result >>= 6;
   608  0703  0EF7               	swapf	SelectB@result,f
   609  0704  0CF7               	rrf	SelectB@result,f
   610  0705  0CF7               	rrf	SelectB@result,f
   611  0706  3003               	movlw	3
   612  0707  05F7               	andwf	SelectB@result,f
   613                           
   614                           ;prologue.c: 83: PORTD = result | 0b00010000 | (oldLEDs & 0b11000000);
   615  0708  0876               	movf	SelectB@oldLEDs,w
   616  0709  39C0               	andlw	192
   617  070A  0477               	iorwf	SelectB@result,w
   618  070B  3810               	iorlw	16
   619  070C  1283               	bcf	3,5	;RP0=0, select bank0
   620  070D  1303               	bcf	3,6	;RP1=0, select bank0
   621  070E  0088               	movwf	8	;volatile
   622                           
   623                           ;prologue.c: 84: } while( ReadSw() );
   624  070F  120A  118A  26DA  120A  118A  	fcall	_ReadSw
   625  0714  3A00               	xorlw	0
   626  0715  1D03               	skipz
   627  0716  2EFB               	goto	l687
   628                           
   629                           ;prologue.c: 86: PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   630  0717  1283               	bcf	3,5	;RP0=0, select bank0
   631  0718  1303               	bcf	3,6	;RP1=0, select bank0
   632  0719  0188               	clrf	8	;volatile
   633  071A  3002               	movlw	2
   634  071B  00F5               	movwf	??_SelectB+2
   635  071C  3086               	movlw	134
   636  071D  00F4               	movwf	??_SelectB+1
   637  071E  3099               	movlw	153
   638  071F  00F3               	movwf	??_SelectB
   639  0720                     u197:	
   640  0720  0BF3               	decfsz	??_SelectB,f
   641  0721  2F20               	goto	u197
   642  0722  0BF4               	decfsz	??_SelectB+1,f
   643  0723  2F20               	goto	u197
   644  0724  0BF5               	decfsz	??_SelectB+2,f
   645  0725  2F20               	goto	u197
   646                           
   647                           ;prologue.c: 87: PORTD = result; _delay((unsigned long)((400)*(4000000/4000.0)));
   648  0726  0877               	movf	SelectB@result,w
   649  0727  1283               	bcf	3,5	;RP0=0, select bank0
   650  0728  1303               	bcf	3,6	;RP1=0, select bank0
   651  0729  0088               	movwf	8	;volatile
   652  072A  3003               	movlw	3
   653  072B  00F5               	movwf	??_SelectB+2
   654  072C  3008               	movlw	8
   655  072D  00F4               	movwf	??_SelectB+1
   656  072E  3077               	movlw	119
   657  072F  00F3               	movwf	??_SelectB
   658  0730                     u207:	
   659  0730  0BF3               	decfsz	??_SelectB,f
   660  0731  2F30               	goto	u207
   661  0732  0BF4               	decfsz	??_SelectB+1,f
   662  0733  2F30               	goto	u207
   663  0734  0BF5               	decfsz	??_SelectB+2,f
   664  0735  2F30               	goto	u207
   665                           
   666                           ;prologue.c: 88: PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   667  0736  1283               	bcf	3,5	;RP0=0, select bank0
   668  0737  1303               	bcf	3,6	;RP1=0, select bank0
   669  0738  0188               	clrf	8	;volatile
   670  0739  3002               	movlw	2
   671  073A  00F5               	movwf	??_SelectB+2
   672  073B  3086               	movlw	134
   673  073C  00F4               	movwf	??_SelectB+1
   674  073D  3099               	movlw	153
   675  073E  00F3               	movwf	??_SelectB
   676  073F                     u217:	
   677  073F  0BF3               	decfsz	??_SelectB,f
   678  0740  2F3F               	goto	u217
   679  0741  0BF4               	decfsz	??_SelectB+1,f
   680  0742  2F3F               	goto	u217
   681  0743  0BF5               	decfsz	??_SelectB+2,f
   682  0744  2F3F               	goto	u217
   683                           
   684                           ;prologue.c: 90: PORTD=oldLEDs;
   685  0745  0876               	movf	SelectB@oldLEDs,w
   686  0746  1283               	bcf	3,5	;RP0=0, select bank0
   687  0747  1303               	bcf	3,6	;RP1=0, select bank0
   688  0748  0088               	movwf	8	;volatile
   689                           
   690                           ;prologue.c: 91: return result;
   691  0749  0877               	movf	SelectB@result,w
   692  074A  0008               	return
   693  074B                     __end_of_SelectB:	
   694                           
   695                           	psect	text2
   696  06DA                     __ptext2:	
   697 ;; *************** function _ReadSw *****************
   698 ;; Defined at:
   699 ;;		line 41 in file "prologue.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  tmp             1    2[COMMON] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      unsigned char 
   706 ;; Registers used:
   707 ;;		wreg, status,2
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         1       0       0       0       0
   715 ;;      Temps:          2       0       0       0       0
   716 ;;      Totals:         3       0       0       0       0
   717 ;;Total ram usage:        3 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_SelectB
   723 ;;		_main
   724 ;;		_Select4
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _ReadSw
   730  06DA                     _ReadSw:	
   731  06DA                     l43:	
   732                           ;incstack = 0
   733                           ; Regs used in _ReadSw: [wreg+status,2]
   734                           ;prologue.c: 42: unsigned char tmp;
   735                           ;prologue.c: 43: do {
   736                           
   737                           
   738                           ;prologue.c: 44: tmp = PORTB & 0b00000001;
   739  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   740  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   741  06DC  0806               	movf	6,w	;volatile
   742  06DD  3901               	andlw	1
   743  06DE  00F0               	movwf	??_ReadSw
   744  06DF  0870               	movf	??_ReadSw,w
   745  06E0  00F2               	movwf	ReadSw@tmp
   746                           
   747                           ;prologue.c: 45: _delay((unsigned long)((20)*(4000000/4000.0)));
   748  06E1  301A               	movlw	26
   749  06E2  00F1               	movwf	??_ReadSw+1
   750  06E3  30F8               	movlw	248
   751  06E4  00F0               	movwf	??_ReadSw
   752  06E5                     u227:	
   753  06E5  0BF0               	decfsz	??_ReadSw,f
   754  06E6  2EE5               	goto	u227
   755  06E7  0BF1               	decfsz	??_ReadSw+1,f
   756  06E8  2EE5               	goto	u227
   757  06E9  0000               	nop
   758                           
   759                           ;prologue.c: 46: } while( tmp != (PORTB & 0b00000001) );
   760  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   761  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   762  06EC  0806               	movf	6,w	;volatile
   763  06ED  3901               	andlw	1
   764  06EE  0672               	xorwf	ReadSw@tmp,w
   765  06EF  1D03               	skipz
   766  06F0  2EDA               	goto	l43
   767                           
   768                           ;prologue.c: 47: return tmp;
   769  06F1  0872               	movf	ReadSw@tmp,w
   770  06F2  0008               	return
   771  06F3                     __end_of_ReadSw:	
   772                           
   773                           	psect	text3
   774  06B2                     __ptext3:	
   775 ;; *************** function _ReadADC *****************
   776 ;; Defined at:
   777 ;;		line 34 in file "prologue.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      unsigned char 
   784 ;; Registers used:
   785 ;;		wreg
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         0       0       0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_SelectB
   801 ;;		_Select4
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _ReadADC
   807  06B2                     _ReadADC:	
   808                           
   809                           ;prologue.c: 35: ADCON0 |= 0b00000010;
   810                           
   811                           ;incstack = 0
   812                           ; Regs used in _ReadADC: [wreg]
   813  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   814  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   815  06B4  149F               	bsf	31,1	;volatile
   816  06B5                     l37:	
   817                           ;prologue.c: 36: while ( (ADCON0 & 0b00000010) );
   818                           
   819  06B5  189F               	btfsc	31,1	;volatile
   820  06B6  2EB5               	goto	l37
   821                           
   822                           ;prologue.c: 37: return ADRESH;
   823  06B7  081E               	movf	30,w	;volatile
   824  06B8  0008               	return
   825  06B9                     __end_of_ReadADC:	
   826  007E                     btemp	set	126	;btemp
   827  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     19      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SelectB
    _SelectB->_ReadSw

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0     297
                                              8 COMMON     4     4      0
                                              0 BANK0     19    19      0
                             _ReadSw
                            _SelectB
 ---------------------------------------------------------------------------------
 (1) _SelectB                                              5     5      0     158
                                              3 COMMON     5     5      0
                            _ReadADC
                             _ReadSw
 ---------------------------------------------------------------------------------
 (2) _ReadSw                                               3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadSw
   _SelectB
     _ReadADC
     _ReadSw

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Nov 04 11:24:10 2017

                       pc 0002                        l43 06DA                        l37 06B5  
                      fsr 0004                       l687 06FB                       l793 07C7  
                     l777 079A                       l797 07DB                       u120 0753  
                     u207 0730                       u217 073F                       u227 06E5  
                     u157 0785                       u167 0794                       u177 07D5  
                     u187 07E9                       u197 0720                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000             __CFG_DEBUG$ON 0000  
                    _main 074B                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           __end_of_ReadADC 06B9           __end_of_SelectB 074B  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089             __CFG_PWRTE$ON 0000             SelectB@result 0077  
          __CFG_FCMEN$OFF 0000                     main@A 0032                     main@B 0031  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07F0              __end_of_main 07F0  
                  ??_main 0078                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ANSELH 0189            SelectB@oldLEDs 0076  
               ??_ReadADC 0070                    _ReadSw 06DA                 ??_SelectB 0073  
 __end_of__initialization 07FC            __pcstackCOMMON 0070              __pidataBANK0 06B9  
                 ?_ReadSw 0070                __pmaintext 074B                   _ReadADC 06B2  
                 _SelectB 06F3           __size_of_ReadSw 0019                   __ptext1 06F3  
                 __ptext2 06DA                   __ptext3 06B2                   main@LUT 0020  
                 main@TMP 0030      end_of_initialization 07FC                 ReadSw@tmp 0072  
          __end_of_ReadSw 06F3       start_initialization 07F0  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_ReadSw 0070                init_fetch0 06C9               __pdataBANK0 0033  
               ___latbits 0002             __pcstackBANK0 0020                  ?_ReadADC 0070  
                ?_SelectB 0070                 main@F1672 0033          __size_of_ReadADC 0007  
        __size_of_SelectB 0058         __CFG_BOR4V$BOR21V 0000             __size_of_main 00A5  
                init_ram0 06CD                _OPTION_REG 0081  
